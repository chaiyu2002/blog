<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老兵驿站</title>
  
  <subtitle>linux MongoDB</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.oxysun.cn/"/>
  <updated>2018-07-04T15:31:52.096Z</updated>
  <id>http://www.oxysun.cn/</id>
  
  <author>
    <name>荒于嬉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB：聚合之累加操作符</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-collection-aggregator-accumulate-operator.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-collection-aggregator-accumulate-operator.html</id>
    <published>2018-07-04T15:29:00.000Z</published>
    <updated>2018-07-04T15:31:52.096Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB的聚合之累加操作符。<br><a id="more"></a></p><p>官网：<a href="https://docs.mongodb.com/manual/reference/operator/aggregation/group/#considerations。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/aggregation/group/#considerations。</a></p><h1 id="累加操作符"><a href="#累加操作符" class="headerlink" title="累加操作符"></a>累加操作符</h1><p>感觉这个没有太多可说的，简单翻译一下。</p><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$avg</td><td>Returns an average of numerical values. Ignores non-numeric values.（返回平均值）</td></tr><tr><td>$first</td><td>Returns a value from the first document for each group. Order is only defined if the documents are in a defined order.（返回第一个）</td></tr><tr><td>$last</td><td>Returns a value from the last document for each group. Order is only defined if the documents are in a defined order.（返回最后一个）</td></tr><tr><td>$max</td><td>Returns the highest expression value for each group.（返回最大值）</td></tr><tr><td>$min</td><td>Returns the lowest expression value for each group.（返回最小值）</td></tr><tr><td>$push</td><td>Returns an array of expression values for each group.</td></tr><tr><td>$addToSet</td><td>Returns an array of unique expression values for each group. Order of the array elements is undefined.（）</td></tr><tr><td>$stdDevPop</td><td>Returns the population standard deviation of the input values.</td></tr><tr><td>$stdDevSamp</td><td>Returns the sample standard deviation of the input values.</td></tr><tr><td>$sum</td><td>Returns a sum of numerical values. Ignores non-numeric values.（返回总和）</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB的聚合之累加操作符。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB：聚合之介绍</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-collection-aggregation-introduction.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-collection-aggregation-introduction.html</id>
    <published>2018-07-04T15:24:00.000Z</published>
    <updated>2018-07-04T15:30:54.749Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB的聚合功能介绍。<br><a id="more"></a></p><p>官网：<a href="https://docs.mongodb.com/manual/aggregation/#single-purpose-agg-operations。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/aggregation/#single-purpose-agg-operations。</a></p><p>初衷：MongoDB的使用还是有一定难度的，官网讲解的一环牵扯一环，不容易一下子把握住重点，也不利于快速查询操作，所以整理一下。</p><p>聚合函数是对记录集（data records）进行操作，是把多条记录集合（group）在一起，进行处理，与此相对应的是sql的group by等操作，这是数据处理的一个方面。</p><p>MongoDB提供三种聚合方法：</p><ol><li>聚合管道。</li><li>map-reduce函数。</li><li>单一功能的聚合方法。</li></ol><h1 id="聚合管道"><a href="#聚合管道" class="headerlink" title="聚合管道"></a>聚合管道</h1><p>接触过<code>linux shell</code>的人应该对管道不会陌生，管道就是对输入的数据进行一系列的处理、转换，变成新的数据。</p><p>这里的聚合管道是对记录集进行多阶段的转换，产出新聚合结果，例如：<br><img src="https://docs.mongodb.com/manual/_images/aggregation-pipeline.bakedsvg.svg" alt="这里写图片描述"></p><p>解释一下：</p><ol><li>数据集合：<code>orders</code>，共有4条记录，这里省略了<code>_id</code> 这个域。</li><li>需求：查找所有<code>status=&quot;A&quot;</code> 的记录，根据cust_id进行分组，计算每个组的<code>amount</code>的和。</li><li>分析：<br><code>{$match: {status: &quot;A&quot;}}</code>，第一个阶段，匹配阶段，查找所有<code>status=&quot;A&quot;</code> 的记录。<br><code>{$group: {_id: &quot;$cust_id&quot;, total: {$sum: &quot;$amount&quot;}}}</code>，第二个阶段，分组计算，根据<code>cust_id</code>进行分组，对每个组的<code>amount</code>进行求和。这里涉及<code>$group</code> 的语法，如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; $group: &#123; _id: &lt;expression&gt;, &lt;field1&gt;: &#123; &lt;accumulator1&gt; : &lt;expression1&gt; &#125;, ... &#125; &#125;</span><br></pre></td></tr></table></figure><p>其中，_id是强制的，后面是可选的。<br><code>&lt;accumulator1&gt;</code>是累加操作符，参考<a href="/mongodb/mongodb-collection-aggregator-accumulate-operator.html">这里</a>，例如这里的<code>$sum</code>，注意，这里必须要加<code>$</code>。<br><code>&lt;expression1&gt;</code>是表达式，<a href="https://docs.mongodb.com/manual/meta/aggregation-quick-reference/#aggregation-expressions" target="_blank" rel="noopener">有待补充</a>， <code>&quot;$amount&quot;</code> , 表示是去取上一个结果中的<code>amount</code> 这个域，对其进行累加，并把结果存入新的域<code>total</code>中。</p><p>这个例子看明白了，聚合就基本明白了。</p><h1 id="Map-Reduce"><a href="#Map-Reduce" class="headerlink" title="Map-Reduce"></a>Map-Reduce</h1><p>map-reduce操作分为两个阶段：map阶段，处理每一条记录，产出一个或多个对象；reduce阶段，合并map阶段的输出。作为可选，map-reduce可以有一个最终阶段来对结果进行最终的操作。map-reduce也可以进行查询、排序和限制输出结果。<br><img src="https://docs.mongodb.com/manual/_images/map-reduce.bakedsvg.svg" alt="这里写图片描述"></p><h1 id="单一功能的聚合方法"><a href="#单一功能的聚合方法" class="headerlink" title="单一功能的聚合方法"></a>单一功能的聚合方法</h1><p>MongoDB也提供<code>db.collection.count()</code>（求和）和<code>db.collection.distinct()</code>（去重）函数。<br><img src="https://docs.mongodb.com/manual/_images/distinct.bakedsvg.svg" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB的聚合功能介绍。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB：查询和投影操作符</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-collection-find-projection-operator.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-collection-find-projection-operator.html</id>
    <published>2018-07-02T13:03:00.000Z</published>
    <updated>2018-07-02T15:08:33.373Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB查询和投影操作符。<br><a id="more"></a></p><p>官网：<a href="https://docs.mongodb.com/manual/reference/operator/query/。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/query/。</a></p><p>这一章节都是很简单的英语，就做一个很简单的备注，如果连这个英语都看不懂，那就需要提高了，程序员看不懂基本的英语是很难提高的。<br>这一章节还需要完善一些样例，这个有待补充。</p><h1 id="查询选择器"><a href="#查询选择器" class="headerlink" title="查询选择器"></a>查询选择器</h1><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$eq</td><td>Matches values that are equal to a specified value.（判断相等）</td></tr><tr><td>$gt</td><td>Matches values that are greater than a specified value.（判断大于）</td></tr><tr><td>$gte</td><td>Matches values that are greater than or equal to a specified value.（判断大于等于）</td></tr><tr><td>$in</td><td>Matches any of the values specified in an array.（判断在其中）</td></tr><tr><td>$lt</td><td>Matches values that are less than a specified value.（判断小于）</td></tr><tr><td>$lte</td><td>Matches values that are less than or equal to a specified value.（判断小于等于）</td></tr><tr><td>$ne</td><td>Matches all values that are not equal to a specified value.（判断所有值都不等于指定值）</td></tr><tr><td>$nin</td><td>Matches none of the values specified in an array.（判断不在其中）</td></tr></tbody></table><h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$and</td><td>Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.（与）</td></tr><tr><td>$not</td><td>Inverts the effect of a query expression and returns documents that do not match the query expression.（非）</td></tr><tr><td>$nor</td><td>Joins query clauses with a logical NOR returns all documents that fail to match both clauses.（异或）</td></tr><tr><td>$or</td><td>Joins query clauses with a logical OR returns all documents that match the conditions of either clause.（或）</td></tr></tbody></table><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$exists</td><td>Matches documents that have the specified field.</td></tr><tr><td>$type</td><td>Selects documents if a field is of the specified type.</td></tr></tbody></table><h2 id="评估"><a href="#评估" class="headerlink" title="评估"></a>评估</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$expr</td><td>Allows use of aggregation expressions within the query language.</td></tr><tr><td>$jsonSchema</td><td>Validate documents against the given JSON Schema.</td></tr><tr><td>$mod</td><td>Performs a modulo operation on the value of a field and selects documents with a specified result.</td></tr><tr><td>$regex</td><td>Selects documents where values match a specified regular expression.</td></tr><tr><td>$text</td><td>Performs text search.</td></tr><tr><td>$where</td><td>Matches documents that satisfy a JavaScript expression.</td></tr></tbody></table><h2 id="地理空间"><a href="#地理空间" class="headerlink" title="地理空间"></a>地理空间</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$geoIntersects</td><td>Selects geometries that intersect with a GeoJSON geometry. The 2dsphere index supports <code>$geoIntersects</code>.</td></tr><tr><td>$geoWithin</td><td>Selects geometries within a bounding GeoJSON geometry. The 2dsphere and 2d indexes support <code>$geoWithin</code>.</td></tr><tr><td>$near</td><td>Returns geospatial objects in proximity to a point. Requires a geospatial index. The 2dsphere and 2d indexes support <code>$near</code>.</td></tr><tr><td>$nearSphere</td><td>Returns geospatial objects in proximity to a point on a sphere. Requires a geospatial index. The 2dsphere and 2d indexes support <code>$nearSphere</code>.</td></tr></tbody></table><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$all</td><td>Matches arrays that contain all elements specified in the query.</td></tr><tr><td>$elemMatch</td><td>Selects documents if element in the array field matches all the specified <code>$elemMatch</code> conditions.</td></tr><tr><td>$size</td><td>Selects documents if the array field is a specified size.</td></tr></tbody></table><h2 id="位操作"><a href="#位操作" class="headerlink" title="位操作"></a>位操作</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$bitsAllClear</td><td>Matches numeric or binary values in which a set of bit positions all have a value of 0.</td></tr><tr><td>$bitsAllSet</td><td>Matches numeric or binary values in which a set of bit positions all have a value of 1.</td></tr><tr><td>$bitsAnyClear</td><td>Matches numeric or binary values in which any bit from a set of bit positions has a value of 0.</td></tr><tr><td>$bitsAnySet</td><td>Matches numeric or binary values in which any bit from a set of bit positions has a value of 1.</td></tr></tbody></table><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$comment</td><td>Adds a comment to a query predicate.</td></tr></tbody></table><h1 id="投影操作"><a href="#投影操作" class="headerlink" title="投影操作"></a>投影操作</h1><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>$</td><td>Projects the first element in an array that matches the query condition.</td></tr><tr><td>$elemMatch</td><td>Projects the first element in an array that matches the specified <code>$elemMatch</code> condition.</td></tr><tr><td>$meta</td><td>Projects the document’s score assigned during <code>$text</code> operation.</td></tr><tr><td>$slice</td><td>Limits the number of elements projected from an array. Supports skip and limit slices.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB查询和投影操作符。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB：查找记录 find（1）</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-collection-find-1.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-collection-find-1.html</id>
    <published>2018-07-02T13:03:00.000Z</published>
    <updated>2018-07-02T15:15:43.385Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB如何查询记录之一。<br><a id="more"></a></p><p>官网：<a href="https://docs.mongodb.com/manual/reference/method/db.collection.find/。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/method/db.collection.find/。</a></p><h1 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(query, projection)</span><br></pre></td></tr></table></figure><p>在集合或者视图的文档中进行选择，并且返回一个指向被选中的文档的游标。（原文是：Selects documents in a collection or view and returns a cursor to the selected documents.）</p><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>query</td><td>文档型</td><td>可选。使用查询操作符(<a href="https://www.oxysun.cn/mongodb/mongodb-collection-find-projection-operator.html">参考这里</a>)，指定了查询过滤器。 想要返回集合中所有的文档，忽略这个参数，或者传一个空的文档({})。</td></tr><tr><td>projection</td><td>文档型</td><td>可选。制定了匹配查询过滤器，要返回的文档的域。想要返回匹配的文档中的所有域，忽略这个参数。</td></tr></tbody></table><h1 id="行为"><a href="#行为" class="headerlink" title="行为"></a>行为</h1><h2 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h2><p>projection参数决定了哪些域需要被返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; field1: &lt;value&gt;, field2: &lt;value&gt; ... &#125;</span><br></pre></td></tr></table></figure><p><code>&lt;value&gt;</code>可以是:</p><ul><li>1 或 true 表示要在返回文档中包含这个域。</li><li>0 或 false 表示不包含这个域。</li><li>表达式使用了投影操作符（有待解释）。</li></ul><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p><strong>实例</strong> 查找<a href="https://www.oxysun.cn/mongodb/mongodb-collection-create.html">上文</a>test集合中的所有文档。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.test.find().pretty()</span><br><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;5abb3b5bce69c048be080199&quot;),</span><br><span class="line">    &quot;meta&quot; : &#123;</span><br><span class="line">        &quot;createAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;),</span><br><span class="line">        &quot;updateAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;a&quot; : &quot;1&quot;,</span><br><span class="line">    &quot;b&quot; : &quot;1&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;5abb3b5bce69c048be080120&quot;),</span><br><span class="line">    &quot;meta&quot; : &#123;</span><br><span class="line">        &quot;createAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;),</span><br><span class="line">        &quot;updateAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;a&quot; : &quot;1&quot;,</span><br><span class="line">    &quot;b&quot; : &quot;3&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>pretty()</code>是用来让展示更加舒适。</p><p><strong>实例</strong> 查找test集合中的<code>b=&quot;3&quot;</code>的记录，这里要注意<code>“3”</code>和<code>3</code>是不一样的，这里是要符合js的语法，字符串和数字表示方式是不同的。做一个好的程序员，一定要严谨，而做到了严谨，可以帮你更快地提高，更快地产出，更好地规避错误，其实加快了你的职场发展节奏。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.test.find(&#123;b: &quot;3&quot;&#125;).pretty()</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot; : ObjectId(&quot;5abb3b5bce69c048be080120&quot;),</span><br><span class="line">&quot;meta&quot; : &#123;</span><br><span class="line">&quot;createAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;),</span><br><span class="line">&quot;updateAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;)</span><br><span class="line">&#125;,</span><br><span class="line">&quot;a&quot; : &quot;1&quot;,</span><br><span class="line">&quot;b&quot; : &quot;3&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到，这次只查出了一条符合条件的记录。</p><p><strong>实例</strong> 查找test集合中的b=”3”的记录a和b两个域，不要其它域。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.test.find(&#123;b: &quot;3&quot;&#125;, &#123;a: 1, b: 1&#125;).pretty()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5abb3b5bce69c048be080120&quot;), &quot;a&quot; : &quot;1&quot;, &quot;b&quot; : &quot;3&quot; &#125;</span><br></pre></td></tr></table></figure><p>可以看到，没有涉及的域就没有再获取出来，这样在一些情况下是可以节省网络开销和分析成本的，在《高性能MySQL》也是讲过类似的原理，不要大而全地去把所有内容获取回来，对于资源的使用，应该是有规划的、经济地去使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB如何查询记录之一。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux下shell命令用法及常见用例：touch</title>
    <link href="http://www.oxysun.cn/linux/daily-command-touch.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-touch.html</id>
    <published>2018-07-01T06:28:00.000Z</published>
    <updated>2018-07-01T06:55:53.794Z</updated>
    
    <content type="html"><![CDATA[<p>touch命令用来创建文件，也可以更改和修改一个文件的时间戳。<br><a id="more"></a></p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p><code>touch [选项]... 文件...</code></p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>touch命令用来创建文件，也可以更改和修改一个文件的时间戳。Linux中的每个文件都与时间戳相关联，而且每个文件都存储上次访问时间，上次修改时间，上次更改时间的信息。因为，无论何时创建一个新文件，访问或者修改现有文件，时间戳都会被自动更新。<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-man.png" alt=""></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><p>Linux中的文件有三个时间：</p><ul><li>access time（atime）：访问时间，对一次文件的内容就会更新。例如cat，vi/vim，cp，touch命令。</li><li>modification time（mtime）：修改时间，对文件内容修改一次就会更新。例如touch，vi/vim命令。</li><li>status time（ctime）：状态改动时间。通过chmod/chown/chgrp等命令更改一次文件属性，通过touch准确地修改时间等，这个时间就会更新。例如mv，touch，chmod/chown/chgrp，vi/vim等命令。</li></ul><p>touch命令选项：</p><ul><li>-a，只改变访问时间。</li><li>-c，如果文件不存在，那就不创建。</li><li>-d，更新访问时间和修改时间。</li><li>-m，只改变修改时间。</li><li>-r，将参照文件ref_file相应的时间戳作为指定文件file时间戳的新值。</li><li>-t，用指定的时间创建文件，格式是[[CC]YY]MMDDhhmm[.SS]。CCYY的范围在1969~2068之内。SS为秒数，范围在0~61之间，这样可以处理闰秒。由于系统的限制，早于1970年1月1日的时间是错误的。</li></ul><h3 id="示例：1-创建空文件"><a href="#示例：1-创建空文件" class="headerlink" title="示例：1. 创建空文件"></a>示例：1. 创建空文件</h3><p>描述：若文件不存在，使用touch命令可以轻松地创建一个空文件，或是创建多个。如果文件已存在，那么文件的3个时间：修改时间（mtime）、状态改动时间（ctime）和访问时间（atime）都会被更新为当前时间。stat命令可以查看文件时间。<br>命令：<br><code>touch my_one</code><br><code>stat my_one</code><br><code>touch my_one my_two my_three</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch.png" alt=""></p><h3 id="示例：2-只改变文件的修改时间（mtime）和状态改动时间（ctime）"><a href="#示例：2-只改变文件的修改时间（mtime）和状态改动时间（ctime）" class="headerlink" title="示例：2. 只改变文件的修改时间（mtime）和状态改动时间（ctime）"></a>示例：2. 只改变文件的修改时间（mtime）和状态改动时间（ctime）</h3><p>描述：只改变my_three文件的修改时间为当前时间，同时状态改动时间会在命令执行后更新为当前时间。这个操作并不需要修改文件内容。-m选项只更改文件的修改时间。<br>命令：<code>touch -m my_three</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-m.png" alt=""></p><h3 id="示例：3-只改变文件访问时间（atime）和状态改动时间（ctime）"><a href="#示例：3-只改变文件访问时间（atime）和状态改动时间（ctime）" class="headerlink" title="示例：3. 只改变文件访问时间（atime）和状态改动时间（ctime）"></a>示例：3. 只改变文件访问时间（atime）和状态改动时间（ctime）</h3><p>描述：只改变my_three文件的访问时间为当前时间，同时状态改动时间会在命令执行后更新为当前时间。如果文件不存在，会创建新的空文件。-a选项只更改文件的访问时间。<br>命令：<code>touch -a my_three</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-a.png" alt=""></p><h3 id="示例：4-指定文件的访问时间和修改时间"><a href="#示例：4-指定文件的访问时间和修改时间" class="headerlink" title="示例：4. 指定文件的访问时间和修改时间"></a>示例：4. 指定文件的访问时间和修改时间</h3><p>描述：同时设置文件的访问时间和修改时间为指定时间，同时会更新状态改变时间为当前命令执行后的时间。如果文件不存在，会创建新的空文件。-d选项同时改变文件的访问时间和修改时间。<br>命令：<code>touch -d &quot;2018-06-14 14:00:00&quot; my_three</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-d.png" alt=""></p><p>描述：将my_three文件的访问时间和修改时间修改成两天前。touch还支持像date命令那样修改文件的时间。<br>命令：<code>touch -d &quot;2 days ago&quot; my_three</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-d-date.png" alt=""></p><h3 id="示例：5-避免创建新文件"><a href="#示例：5-避免创建新文件" class="headerlink" title="示例：5. 避免创建新文件"></a>示例：5. 避免创建新文件</h3><p>描述：更新atime、ctime、mtime，如果文件不存在，-c选项不会创建新的文件。<br>命令：<code>touch -c leena</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-a.png" alt=""></p><h3 id="示例：6-使用另一个文件的时间戳"><a href="#示例：6-使用另一个文件的时间戳" class="headerlink" title="示例：6. 使用另一个文件的时间戳"></a>示例：6. 使用另一个文件的时间戳</h3><p>描述：-r选项将my_three的时间戳作为my_two文件的时间戳的新值，这两个文件有相同的时间戳。<br>命令：<code>touch -r my_three my_two</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-r.png" alt=""></p><h3 id="示例：7-使用指定的时间戳创建一个文件"><a href="#示例：7-使用指定的时间戳创建一个文件" class="headerlink" title="示例：7. 使用指定的时间戳创建一个文件"></a>示例：7. 使用指定的时间戳创建一个文件</h3><p>描述：将my_four文件的时间戳指定为1997年6月14日17点00分55秒。时间格式是[[CC]YY]MMDDhhmm[.SS]。<br>命令：<code>touch -t 199706141700.55 my_four</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/touch/touch-t.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;touch命令用来创建文件，也可以更改和修改一个文件的时间戳。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.oxysun.cn/categories/linux/"/>
    
      <category term="shell" scheme="http://www.oxysun.cn/categories/linux/shell/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux下shell命令用法及常见用例： awk</title>
    <link href="http://www.oxysun.cn/linux/daily-command-awk.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-awk.html</id>
    <published>2018-07-01T02:00:00.000Z</published>
    <updated>2018-07-01T05:20:35.161Z</updated>
    
    <content type="html"><![CDATA[<p>awk命令在文件或字符串中基于指定规则浏览和抽取信息。<br><a id="more"></a></p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>awk是一种小巧的编程语言及命令行工具。（其名称得自于它的创始人Alfred Aho、Peter Weinberger 和 Brian Kernighan姓氏的首个字母）。它非常适合服务器上的日志处理，主要是因为awk可以对文件进行操作，通常以可读文本构建行。<br>awk命令在文件或字符串中基于指定规则浏览和抽取信息。awk抽取信息后，才能进行其他文本操作，awk脚本通常用来格式化文本文件中的信息。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>有三种方式调用awk，第一种是命令行方式，例如：<br><code>awk [-F field-separator] &#39;commands&#39; input-file(s)</code><br>awk默认使用空格作为缺省的域分隔符。如果要浏览诸如passwd文件，此文件是以冒号作为分隔符，则必须指明-F选项。例如：<br><code>awk -F : &#39;commands&#39; input-file</code><br>第二种方式是将所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它。<br>第三种方式是将所有的awk命令插入一个单独文件，然后调用：<br><code>awl -f awk-script-file input-file(s)</code><br>-f选项指明在文件awk-script-file中的awk脚本，input_file(s)是使用awk进行浏览的文件名。</p><h2 id="awk脚本"><a href="#awk脚本" class="headerlink" title="awk脚本"></a>awk脚本</h2><h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><p>awk脚本的代码结构很简单，就是一系列的模式（pattern）和动作（action）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># comment</span><br><span class="line">Pattern1 &#123; ACTIONS; &#125;</span><br><span class="line"># comment</span><br><span class="line">Pattern2 &#123; ACTIONS; &#125;</span><br><span class="line"># comment</span><br><span class="line">Pattern3 &#123; ACTIONS; &#125;</span><br><span class="line"># comment</span><br><span class="line">Pattern4 &#123; ACTIONS; &#125;</span><br></pre></td></tr></table></figure><p>扫描文档的每一行时都必须与每一个模式进行匹配比较，一次只匹配一个模式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">this is line 1</span><br><span class="line">this is line 2</span><br></pre></td></tr></table></figure><p>this is line 1这行会先Pattern1进行匹配，如果匹配成功，就会执行ACTIONS。然后this is line 1会和Pattern2进行匹配，如果匹配失败，就调到Pattern3进行匹配，以此类推。<br>一旦所有的模式都匹配过了，this is line 2就会以同样的步骤进行匹配。其他的行也一样，直到读取完整个文件。这就是awk的运行模式。</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>awk仅有两个主要的数据类型：字符串和数字，它们可以相互转换。<br>在ACTIONS部分使用=操作符给变量赋值，可以在任意时刻、任意地方声明和使用变量，也可以使用未初始化的变量，默认是空字符串。<br>awk有数组类型，并且它们是动态的一维关联数组。</p><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><p>模式分为三大类：正则表达式、布尔表达式和特殊模式。</p><p>所有模式都是可选的，下面的脚本形式会对输入的每一行都会简单地执行ACRIONS。<br><code>{ ACTIONS }</code></p><h3 id="特殊的模式"><a href="#特殊的模式" class="headerlink" title="特殊的模式"></a>特殊的模式</h3><p>模式包括两个特殊字段：BEGIN和END。BEGIN在所有输入未被处理之前，即文本浏览动作之前进行匹配。可以初始化脚本变量和所有种类的状态的主要地方。END会在所有的输入都被处理完后，即完成文本浏览动作后进行匹配。可以在退出前进行清除工作和一些最后的输出。<br>最后一类模式，要把它进行归类有点困难。它处于变量和特殊值之间，我们通常称它们为域（Field）。而且名副其实。</p><h3 id="域"><a href="#域" class="headerlink" title="域"></a>域</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># According to the following line</span><br><span class="line">#</span><br><span class="line"># $1 $2 $3</span><br><span class="line"># 00:34:23 GET /foo/bar.html</span><br><span class="line"># _____________ _____________/</span><br><span class="line"># $0</span><br><span class="line"> </span><br><span class="line"># Hack attempt?</span><br><span class="line">/admin.html$/ &amp;&amp; $2 == &quot;DELETE&quot; &#123;</span><br><span class="line">print &quot;Hacker Alert!&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>域（默认地）由空格分隔。$0域代表了一整行的字符串。$1 域是第一块字符串（在任何空格之前），$2\$域是后一块，以此类推。<br>awk执行时，其浏览域标记为$1, $2, $3…$n。这种方式称为域标识。使用$1, $3标识表示第1和第3域。使用$0$标识表示所有域。<br>awk浏览到一新行时，即到达域的记录末尾，执行新记录下一行的读动作，重新设置域分隔。</p><h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><p>最常用和最有用的行为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123; print $0; &#125; # prints $0. In this case, equivalent to &apos;print&apos; alone</span><br><span class="line">&#123; exit; &#125; # ends the program</span><br><span class="line">&#123; next; &#125; # skips to the next line of input</span><br><span class="line">&#123; a=$1; b=$0 &#125; # variable assignment</span><br><span class="line">&#123; c[$1] = $2 &#125; # variable assignment (array)</span><br><span class="line"> </span><br><span class="line">&#123; if (BOOLEAN) &#123; ACTION &#125;</span><br><span class="line">else if (BOOLEAN) &#123; ACTION &#125;</span><br><span class="line">else &#123; ACTION &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123; for (i=1; i&lt;x; i++) &#123; ACTION &#125; &#125;</span><br><span class="line">&#123; for (item in c) &#123; ACTION &#125; &#125;</span><br></pre></td></tr></table></figure><p>awk里的变量都是全局变量。</p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数的<a href="https://www.gnu.org/software/gawk/manual/html_node/Built_002din.html#Built_002din" target="_blank" rel="noopener">通用文档(regular documentation)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; somecall($2) &#125;</span><br></pre></td></tr></table></figure><p>用户定义的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># function arguments are call-by-value</span><br><span class="line">function name (parameter-list) &#123;</span><br><span class="line">ACTIONS; #same actions as usual</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># return is valid keyword</span><br><span class="line">function add (val) &#123;</span><br><span class="line">return val+1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：0. 新建测试文件</strong><br>描述：新建一个device文件，其中(1)为序号，(2)为Android版本，(3)为访问时间，(4)为IP，(5)为访问次数。本文大部分实例根据这一文件进行说明。<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-origin.png" alt=""></p><p><strong>实例：1. 抽取域</strong><br>描述：打印第1个（序号）域和第2个（Android版本）域的内容。print用来输出其后跟着的内容，用大括号把print语句括起来，表示一个打印动作。<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-partion-domain.png" alt=""></p><p><strong>实例：2. 打印所有记录</strong><br>描述：打印所有记录。$0代表所有域。<br>命令：<code>awk &#39;{print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-$0.png" alt=""></p><p><strong>实例：3. 打印报告头</strong><br>描述：在序号和IP地址之间用一些空格使之更容易划分，也可以在域间使用tab键加以划分。本例中加入NO和IP两个信息头以及中划线，\n启动新行，并在\n下一行启动打印文本操作。打印信息头放置在BEGIN模式部分，因为打印信息头被界定为一个动作，必须用大括号括起来。在awk查看第一条记录前，信息头被打印。<br>命令：<code>awk &#39;BEGIN {print &quot;NO        IP\n------------------------&quot;} {print $1&quot;\t&quot;$4}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-Begin.png" alt=""></p><p><strong>实例：4. 打印信息尾</strong><br>描述：在末行加入end of report信息。END语句在所有文本处理动作执行完之后才被执行，在脚本中的位置是在主要动作之后。<br>命令：<code>awk &#39;BEGIN {print &quot;Version\n-------&quot;} {print $2} END {print &quot;end-of-report&quot;}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-End.png" alt=""></p><p><strong>实例：5. 错误信息提示</strong><br>描述：如果将在awk命令中缺少一个双引号，awk将返回错误提示信息。<br>命令：<code>awk &#39;BEGIN {print &quot;Version\n-------&quot;} {print $2} END {print &quot;end-of-report}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-error.png" alt=""></p><p>注意：在碰到awk错误时，应从以下几点进行排查：</p><ul><li>确保整个awk命令引用单引号括起来。</li><li>确保命令内所有引号成对出现。</li><li>确保用花括号括起动作语句，用圆括号括起条件语句。</li><li>可能忘记使用花括号。</li></ul><p>描述：如果查询的文件不存在，将得到以下错误信息：<br>命令：<code>awk &#39;END {print NR}&#39; device.txt</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-file-not-found.png" alt=""></p><h3 id="条件操作符"><a href="#条件操作符" class="headerlink" title="条件操作符"></a>条件操作符</h3><p><strong>实例：1. 匹配</strong><br>描述：如果field-4以数字4开头，打印它。如果条件满足，则打印匹配的记录行。符号~后紧跟正则表达式，使一域号匹配正则表达式，也可以使用if语句。awk的if后面的条件用()括起来。^尖角符号表示行首。<br>命令：<code>awk &#39;{ if ($4 ~ /^4/) print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-if.png" alt=""></p><p>等同于：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-same-if.png" alt=""></p><p><strong>实例：2. 精确匹配</strong><br>描述：精确匹配访问次数为1次的记录，确保不匹配访问次数为15次的记录。使用等号==，并用单引号括起条件，也可以使用if语句。<br>命令：<code>awk &#39;$5==&quot;1&quot; {print $0}&#39; device</code><br>或者：<code>awk &#39;{if($5==/1/) print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-==.png" alt=""></p><p><strong>实例：3. 不匹配</strong><br>描述：不匹配IP地址以4开头的记录。使用!~表示不匹配。<br>命令：<code>awk &#39;$4 !~ /^4/&#39; device</code><br>或者：<code>awk &#39;{ if ($4 !~ /^4/) print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-!~.png" alt=""></p><p>注意这里不能用!=，因为用引号或者/括起了^4，将只匹配4而不匹配49.65.119.165等。如果查询非49.65.119.165的记录，可做如下操作：<br><code>awk &#39;$4 != &quot;49.65.119.165&quot;&#39; device</code></p><p><strong>实例：4. 小于，小于等于，大于，大于等于</strong><br>描述：匹配访问次数小于序号的记录。同样的有小于等于（&lt;=），大于（&gt;），大于等于（&gt;=）。<br>命令：<code>awk &#39;$4 !~ /^4/&#39; device</code><br>或者：<code>awk &#39;{ if ($4 !~ /^4/) print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-less-than.png" alt=""></p><p><strong>实例：5. 设置大小写</strong><br>描述：匹配含有前面是i或I，后面是OS的记录。[]符号可匹配[]内任意字符或单词。<br>命令：<code>awk &#39;/[iI]OS/&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-i.png" alt=""></p><p><strong>实例：6. 任意字符</strong><br>描述：匹配Android版本，第八个字符是7，打印它。表达式/^…….7/表示行首前7个字符任务，第八个是7。<br>命令：<code>awk &#39;$2 ~ /^.......7/&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-dot.png" alt=""></p><p><strong>实例：7. 或关系匹配</strong><br>描述：匹配IP地址以4或者3开头的记录。竖线符|意为两边模式之一。可以得到与[]表达式相同的结果。<br>命令：<code>awk &#39;$4 ~ /^(4|3)/&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-or.png" alt=""></p><p>注意，在使用竖线符时，语句必须用圆括号括起来。另外，除了字符重复出现外，其他的正则表达式在awk中都是合法的。</p><p><strong>实例：8. AND</strong></p><p>描述：匹配Android版本在7.0以上，并且IP地址以4开头的记录。OR，非与之类似。<br>命令：<code>awk &#39;$2 ~ /^.......7/ &amp;&amp; $4 ~ /^4/&#39; device</code><br>等同于：<code>awk &#39;{ if ($2 ~ /^.......7/ &amp;&amp; $4 ~ /^4/) print $0} &#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-&amp;&amp;.png" alt=""></p><h3 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h3><p>awk内置变量如下：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-builtin-variable-table-1.png" alt=""></p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-builtin-variable-table-2.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BEGIN &#123; # Can be modified by the user</span><br><span class="line">FS = &quot;,&quot;; # Field Separator</span><br><span class="line">RS = &quot;n&quot;; # Record Separator (lines)</span><br><span class="line">OFS = &quot; &quot;; # Output Filed Separator</span><br><span class="line">ORS = &quot;n&quot;; # Output Record Separator (lines)</span><br><span class="line">&#125;</span><br><span class="line">&#123; # Can&apos;t be modified by the user</span><br><span class="line">NF # Number of Fileds in the current Record (lines)</span><br><span class="line">NR # Number of Records seen so far</span><br><span class="line">ARGV / ARGC # Script Arguments</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NF：支持记录域个数，在记录被读之后再设置。<br>NR：已读的记录数。<br>FILENAME：告知系统目前正在浏览的实际文件，因为awk可以同时处理许多文件。</p><p><strong>实例：1. NF、NR、FILENAME</strong></p><p>描述：所有记录被打印，并带有记录号（第二和第三列），并在最后输出文件名。使用NF变量显示每一条读记录中有多少个域（5个），使用NR显示已读的记录数，使用FILENAME显示正在处理的文件名。<br>命令：<code>awk &#39;{print NF,NR,$0} END {print FILENAME}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-builtin-variable.png" alt=""></p><p><strong>实例：2. 判断文件至少有一个记录</strong></p><p>描述：先检查文件中至少有一个记录时才查询IP地址。<br>命令：<code>awk &#39;NR &gt; 0 &amp;&amp; $4 ~ /^4/&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-NR.png" alt=""></p><p><strong>实例：3. 与echo结合使用</strong></p><p>描述：将变量$PWD的返回值传入awk并显示其目录。需要指定域分隔符/。<br>命令：<code>echo $PWD | awk -F / &#39;{print $NF}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-echo.png" alt=""></p><p>描述：显示文件名。<br>命令：<code>echo &quot;/etc/vimrc&quot; | awk -F / &#39;{print $NF}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-show-filename.png" alt=""></p><h3 id="awk操作符"><a href="#awk操作符" class="headerlink" title="awk操作符"></a>awk操作符</h3><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-operator.png" alt=""></p><p><strong>实例：1. 设置输入域到域变量名</strong><br>描述：赋值IP地址域为ip，版本域为version，查询版本大于7的记录，并打印IP地址和版本信息。<br>命令：<code>awk &#39;{ip=$4;version=$2; if (version ~ /*7*/) print ip&quot;&quot;version}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-set-variable.png" alt=""></p><p><strong>实例：2. 域值比较操作</strong><br>有两种方式测试数值域是否小于另一数值域。</p><ul><li>在BEGIN中给变量名赋值。</li><li>在关系操作中使用实际数值。</li></ul><p>描述：找出访问次数大于10次的所有记录。<br>命令：<code>awk &#39;{if ($5 &gt; 10) print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-comparable.png" alt=""></p><p><strong>实例：3. 修改数值域的值</strong></p><p>当在awk中修改任何域时，实际输入文件是不可修改的，修改的只是保存在缓存里的awk副本，awk会在变量NR或NF变量中反映出修改痕迹。</p><p>描述：修改序号为6的记录，将其访问次数减一。<br>命令：<code>awk &#39;{if ($1==6) $5=$5-1; print $1, $2, $5 }&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-modify-copy-number-domain.png" alt=""></p><p><strong>实例：4. 修改文本域</strong></p><p>描述：修改序号为6的记录，将其版本修改为iOS11.2.3。修改文本域就是对其重新赋值。<br>命令：<code>awk &#39;{if ($1==6) ($2=&quot;iOS11.2.3&quot;); print $1, $2, $5 }&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-modify-text-copy-domain.png" alt=""></p><p><strong>实例：5. 只显示修改记录</strong></p><p>描述：只显示修改后序号为6的记录。<br>命令：<code>awk &#39;{if ($1==6) {$2=&quot;iOS11.2.3&quot;; print $2}; }&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-modify-and-only-show-modified.png" alt=""></p><p><strong>实例：6. 创建新的输出域</strong></p><p>描述：创建新域6保存目前访问次数大于序号的减法值，表达式为’{$6=$5-$1}’，只打印其值大于零的序号和其新域值。在BEGIN部分加入tab键以对齐报告头。也可以赋给新域更有意义的变量名。<br>命令：<code>awk &#39;BEGIN {print &quot;IP\t Difference&quot;} {if ($5 &gt; $1) {$6=$5-$1; print $1 &quot;\t&quot; $6}}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-add-new-domain.png" alt=""></p><p><strong>实例：7. 增加列值</strong></p><p>描述：使用+=累加访问次数的值。awk的每一个操作匹配时，如果没有说明打印记录，那默认会打印所有记录。<br>命令：<code>awk &#39;(total+=$5); END {print &quot;total visits : &quot; total}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-add-column-value.png" alt=""></p><p><strong>实例：8. 文件长度相加</strong></p><p>描述：查看当前目录中所有文件的长度及其综合，但要排除子目录，使用ls -l命令，然后管道输出到awk，awk首先剔除首字符d（/^[^d]/）的记录，然后将文件长度相加，并输出每一文件长度及在END部分输出所有文件的长度。<br>命令：<code>ls -l | awk &#39;/^[^d]/ {print $9&quot;\t&quot;$5} {total+=$5} END {print &quot;total KB: &quot; total}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-acc-file-size.png" alt=""></p><h3 id="内置字符串函数"><a href="#内置字符串函数" class="headerlink" title="内置字符串函数"></a>内置字符串函数</h3><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-string-function.png" alt=""></p><p>gsub类似于sed查找和替换。它允许替换一个字符串或字符为另一个字符串或字符，并以正则表达式的形式执行，第一个函数作用于记录$0，第二个gsub函数允许指定目标，如果未指定，默认是$0。<br>index(s, t)函数返回目标字符串s中查询字符串t的首位置。<br>length函数返回字符串s字符长度。<br>match函数测试字符串s是否包含一个正则表达式r定义的匹配。<br>split函数使用域分隔符fs，将字符串s划分为指定序列a。<br>sprint函数类似于printf函数，返回基本输出格式fmt的结果字符串exp。<br>sub(r, s)函数将用s代替$0中最左边最长的子串，该子串被（r）匹配。<br>sub(s, p)返回字符串s在位置p后的后缀部分。<br>substr(s, p, n)函数返回字符串s在位置p后长度为n的后缀部分。</p><p><strong>实例：1. gsub</strong></p><p>描述：匹配记录中访问时间为11:35的记录，修改为11:40。注意要用双引号括起来。<br>命令：<code>awk &#39;gsub(/11:35/, &quot;11:40&quot;) {print $0}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-gsub.png" alt=""></p><p><strong>实例：2. index</strong><br>描述：匹配字符串Honey中，ney子串第一次出现的位置，即字符个数。<br>命令：<code>awk &#39;BEGIN {print index(&quot;Honey&quot;, &quot;ney&quot;)}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-index.png" alt=""></p><p><strong>实例：3. length</strong></p><p>描述：匹配序号为6，第二个域的字符长度。也可以直接使用字符串。<br>命令：<code>awk &#39;$1==6 {print length($2) &quot;---&quot; $2}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-length.png" alt=""></p><p><strong>实例：4. match</strong></p><p>描述：match测试目标字符串是否包含查找字符的一部分，可以使用正则表达式。<br>命令：<br>在AWK中查找d，因其不存在，所以返回0。<br><code>awk &#39;BEGIN {print match(&quot;AWK&quot;, /d/)}&#39;</code><br>在AWK中查找K，因其存在，所有返回AWK中K出现的首位置字符数。<br><code>awk &#39;BEGIN {print match(&quot;AWK&quot;, /K/)}&#39;</code><br>在序号为6的记录中，查找Android的大版本号。<br><code>awk &#39;$1==6 {print match($2, &quot;7&quot;)}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-match.png" alt=""></p><p><strong>实例：5. split</strong></p><p>描述：如果域中具有分隔符形式的字符串，使用split函数将其分隔，并保存到一个数组中，最后将数组的第一个元素打印出来。<br>命令：<code>awk &#39;BEGIN {print split(&quot;123#456#789&quot;, myarray, &quot;#&quot;)}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-split.png" alt=""></p><p><strong>实例：6. sub</strong></p><p>描述：匹配所有Android，替换为android。注意只在模式第一次出现时进行替换操作。<br>命令：<code>awk &#39;sub(/Android/, &quot;android&quot;)&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-sub.png" alt=""></p><p><strong>实例：7. substr</strong></p><p>描述：匹配第二个域版本信息中，打印从第一个字符开始到第七个字符。如果给定的长度值远大于字符串长度，awk将从起始位置返回所有字符。另一种形式是返回字符串后缀或指定位置后面的字符。<br>命令：<code>awk &#39;$1==5 {print substr($2,1,7)}&#39; device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-substr.png" alt=""></p><p><strong>实例：8. 从shell向awk传入字符串</strong><br>命令：<br>使用管道将字符串powerful传入awk，返回其长度。<br><code>echo &quot;powerful&quot; | awk &#39;{print length($0)}&#39;</code><br>设置文件名为一变量，管道输出到awk，但会不带扩展名的文件名。<br><code>STR=&quot;myawk.txt&quot; | echo $STR | awk &#39;{print substr($STR,1,5)}&#39;</code><br>设置文件名为一变量，管道输出到awk，只返回其扩展名。<br><code>TR=&quot;myawk.txt&quot; | echo $STR | awk &#39;{print substr($STR,7)}&#39;</code></p><p>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-shell.png" alt=""></p><h3 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h3><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-escape.png" alt=""></p><h3 id="printf修饰符"><a href="#printf修饰符" class="headerlink" title="printf修饰符"></a>printf修饰符</h3><p>基本语法：<code>printf([格式控制符], 参数)</code><br>格式控制符通常在引号里。</p><p>awkprintf修饰符：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-printf-table.png" alt=""></p><p>awk printf格式：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-printf-format-table.png" alt=""></p><p><strong>实例：1. 字符转换</strong><br>描述：通过管道输出65到awk中，printf进行ASCII码字符转换。<br>命令：<br><code>echo &quot;65&quot; | awk &#39;{printf (&quot;%c\n&quot;, $0)}&#39;</code><br>或者<br><code>awk &#39;BEGIN {printf &quot;%c\n&quot;, 65}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-char-convert.png" alt=""></p><p>描述：数字1024转换为浮点数之后，被加入了六个小数点。<br>命令：<br><code>awk &#39;BEGIN {printf &quot;%f\n&quot;, 1024}&#39;</code> </p><p>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-number-convert.png" alt=""></p><p><strong>实例：2. 格式化输出</strong></p><p>描述：BEGIN后的第一个花括号嵌入头信息，第二个花括号打印所有用户的IP地址和访问时间，要求IP地址左对齐，23个字符长度，后跟访问时间。<br>命令：<br><code>awk &#39;BEGIN {print &quot;IP\t\t\tTime&quot;} {printf &quot;%-23s %s\n&quot;, $4, $3}&#39; device</code> </p><p>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-printf-format.png" alt=""></p><p><strong>实例：3. 向一行awk命令传值</strong></p><p>描述：在命令行中设置VISITS等于10，然后传入awk中，查询访问次数大于10的所有记录。<br>命令：<code>awk &#39;{if($5 &gt; VISITS) print $0} &#39; VISITS=10 device</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-command-line-pass-to-awk.png" alt=""></p><p>描述：用管道将df -k传入awk，然后抽出第四列，即剩余可利用空间容量。使用$4 ~ /^[0-9]/取得容量数值，最后对命令行if($4 &lt; TRIGGER)上变量TRIGGER的值进行查询。<br>查看文件系统空间容量，观察其是否达到一定水平。因为要监视的已使用空间容量不断在变化，所以需要再命令行指定一个触发值。<br>命令：<code>df -k | awk &#39;($4 ~ /^[0-9]/) {if ($4 &lt; TRIGGER) printf &quot;%-15s %s\n&quot;,$6,$4}&#39; TRIGGER=930000</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-df.png" alt=""></p><p>描述：打印当前注册用户，并加入一定信息。<br>命令：<code>who | awk &#39;{print $1 &quot; is logged on&quot;}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-who.png" alt=""></p><p>描述：传入环境变量LOGNAME，显示当前用户名。<br>命令：<code>who | awk &#39;{if ($1 == user) print $1&quot; you are connected to &quot; $2}&#39; user=$LOGNAME&quot;}&#39;</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-env-variable.png" alt=""></p><p><strong>实例：4. awk脚本文件</strong></p><p>描述：第一行#! /usr/bin/awk -f告知脚本系统awk命令的位置。在脚本文件后键入文件名之前，需要先对脚本文件加入可执行权限。<br>命令：<code>chmod u+x user_tot.awk</code><br>user_tot.awk脚本文件：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-user-tot.png" alt=""></p><p>描述：执行user_tot.awk脚本文件。<br>命令：<code>./user_tot.awk device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-run-user-tot.png" alt=""></p><p><strong>实例：5. 在awk中使用FS变量</strong></p><p>描述：从/etc/passwd文件中抽取第1和第5域，通过FS变量，指定冒号:分隔passwd文件域。第1域时账号名，第5域是账号所有者。<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-passwd-file.png" alt=""><br>命令：<code>chmod u+x passwd.awk | ./passwd.awk /etc/passwd</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-run-passwd.png" alt=""></p><p><strong>实例：6. 向awk脚本传值</strong></p><p>向awk脚本传值与向awk一行命令传值的方式大体相同，格式为：<br><code>awk script_file var=value input_file</code></p><p>描述：对比检查文件中域号和指定数字。注意不要忘了增加脚本的可执行权限。<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-fieldcheck-file.png" alt=""><br>命令：<code>chmod u+x fieldcheck.awk | ./fieldcheck.awk MAX=7 FS=&quot;:&quot; /etc/passwd</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-run-fieldcheck.png" alt=""></p><p>描述：从du命令获得输入，并输出块和字节数。<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-duawk-file.png" alt=""><br>命令：<code>chmod u+x duawk.awk | du /root | ./duawk.awk</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-run-duawk.png" alt=""></p><p><strong>实例：9. awk数组</strong></p><p>描述：用split将123#456#789划分开，并存入myarray数组，再使用循环打印各数组元素。<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-array-file.png" alt=""><br>命令：<code>chmod u+x duawk.awk | du /root | ./duawk.awk</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-script-run-array.png" alt=""></p><p><strong>实例：10. 处理由通配符指定的多个文件名</strong></p><p>描述：打印当前目录中以.txt结尾的文件。nextfile告诉awk停止处理当前的输入文件。下一个输入记录读取来自下一个输入文件。<br>命令：<br><code>awk &#39;{ print FILENAME; nextfile } &#39; *.txt</code><br><code>awk &#39;BEGIN{ print &quot;Starting...&quot;} { print FILENAME; nextfile }END{ print &quot;....DONE&quot;} &#39; *.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/awk/awk-multiple-filename.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;awk命令在文件或字符串中基于指定规则浏览和抽取信息。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.oxysun.cn/categories/linux/"/>
    
      <category term="shell" scheme="http://www.oxysun.cn/categories/linux/shell/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux下shell命令用法及常见用例：sed</title>
    <link href="http://www.oxysun.cn/linux/daily-command-sed.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-sed.html</id>
    <published>2018-07-01T02:00:00.000Z</published>
    <updated>2018-07-01T06:54:30.371Z</updated>
    
    <content type="html"><![CDATA[<p><code>sed</code>是stream editor（流式编辑器）的缩写，是一个非交互式的流编辑器，用于过滤或者转换文本。<br>未完待续…<br><a id="more"></a></p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>sed 选项…  [脚本]  [输入文件…]</p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p><code>sed</code>编辑器被称作流编辑器(stream editor)，和普通的交互式文本编辑器恰好相反。在交互式文本编辑器中(比如vim)，你可以用键盘命令来交互式地插入、删除或替换数据中的文本。流编辑器则会在编辑器处理数据之前基于预先提供的一组规则来编辑数据流。<br><code>sed</code>编辑器可以根据命令来处理数据流中的数据，这些命令要么从命令行中输入，要么存储在一个命令文本文件中。sed编辑器会执行下列操作。<br>(1) 一次从输入中读取一行数据。<br>(2) 根据所提供的编辑器命令匹配数据。<br>(3) 按照命令修改流中的数据。<br>(4) 将新的数据输出到STDOUT。 在流编辑器将所有命令与一行数据匹配完毕后，它会读取下一行数据并重复这个过程。在流编辑器处理完流中的所有数据行后，它就会终止。 由于命令是按顺序逐行给出的，sed编辑器只需对数据流进行一遍处理就可以完成编辑操作。<br>这使得sed编辑器要比交互式编辑器快得多，你可以快速完成对数据的自动修改。</p><h1 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h1><p>这个命令使用起来有些复杂，复杂在于功能强大，需要逐步消化。</p><h1 id="常见用例"><a href="#常见用例" class="headerlink" title="常见用例"></a>常见用例</h1><p><strong>实例</strong> 替换input.txt文件中所有的“hello”为“world”，并且输出到output.txt中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;s/hello/world/&apos; input.txt &gt; output.txt</span><br></pre></td></tr></table></figure><p>这可能是最常用的例子了（至少在我工作这么多年的经验中），这里使用了<code>sed</code>的命令<code>s</code>。如果想输出到原文件的话，使用<code>-i</code>参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;s/hello/world/&apos; input.txt</span><br></pre></td></tr></table></figure><p>这个在mac下表现会不一样，参考：<a href="https://blog.csdn.net/cuiaamay/article/details/49495885。" target="_blank" rel="noopener">https://blog.csdn.net/cuiaamay/article/details/49495885。</a></p><p>参考：<a href="https://www.gnu.org/software/sed/manual/sed.html。" target="_blank" rel="noopener">https://www.gnu.org/software/sed/manual/sed.html。</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;sed&lt;/code&gt;是stream editor（流式编辑器）的缩写，是一个非交互式的流编辑器，用于过滤或者转换文本。&lt;br&gt;未完待续…&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.oxysun.cn/categories/linux/"/>
    
      <category term="shell" scheme="http://www.oxysun.cn/categories/linux/shell/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB：创建数据库</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-dababase-create.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-dababase-create.html</id>
    <published>2018-06-30T07:53:48.000Z</published>
    <updated>2018-06-30T10:15:14.155Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB如何创建数据库。<br><a id="more"></a></p><p>官网位置：<a href="https://docs.mongodb.com/manual/mongo/。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/mongo/。</a></p><p>初衷：MongoDB的使用还是有一定难度的，官网讲解的一环牵扯一环，不容易一下子把握住重点，也不利于快速查询操作，所以整理一下。</p><p>进入mongo：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@iZhp3fz3iqsadyes2s8ayeZ:~# mongo</span><br><span class="line">MongoDB shell version: 2.6.10</span><br><span class="line">connecting to: test</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>如果没有mongo这个命令，表示路径没有配置好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use &lt;database&gt;</span><br></pre></td></tr></table></figure><p>尖括号表示需要你替换的变量，别完全照搬，当年我是犯过这种很<code>猪头</code>的错误的，你不要证明你也<code>猪头</code>了。</p><p>如果数据库存在，这条命令会切换到该数据库，如果不存在，则创建并切换到该数据库。</p><p><strong>实例</strong>：创建一个数据库，名字为my_test。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use my_test</span><br><span class="line">switched to db my_test</span><br></pre></td></tr></table></figure><p>好，创建成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB如何创建数据库。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>MongoDB：创建数据集合</title>
    <link href="http://www.oxysun.cn/mongodb/mongodb-collection-create.html"/>
    <id>http://www.oxysun.cn/mongodb/mongodb-collection-create.html</id>
    <published>2018-06-30T07:53:48.000Z</published>
    <updated>2018-06-30T10:18:39.724Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB如何创建数据集合（collection）。<br><a id="more"></a></p><p>官网地址：<a href="https://docs.mongodb.com/manual/reference/method/db.createCollection/#db.createCollection。" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/method/db.createCollection/#db.createCollection。</a></p><p>这节有点混乱，也有点尴尬，因为原本MongoDB就有些“没有规矩”。</p><p>快速创建一个集合，参考<a href="https://blog.csdn.net/chaiyu2002/article/details/80862002" target="_blank" rel="noopener">插入</a>这一节。</p><p>集合不存在的情况下，插入一条记录就会创建集合。</p><p>稍微啰嗦一点，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.test.insert(&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;5abb3b5bce69c048be080199&quot;),</span><br><span class="line">    &quot;meta&quot; : &#123;</span><br><span class="line">        &quot;createAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;),</span><br><span class="line">        &quot;updateAt&quot; : ISODate(&quot;2018-03-28T06:51:07.579Z&quot;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;a&quot; : &quot;1&quot;,</span><br><span class="line">    &quot;b&quot; : &quot;1&quot;,</span><br><span class="line">&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p>这样即会创建集合test，又会给这个集合插入一条记录。</p><p>非要规矩地创建（其实是可以设置一些选项），那么：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&lt;name&gt;, &#123; capped: &lt;boolean&gt;,</span><br><span class="line">                              autoIndexId: &lt;boolean&gt;,</span><br><span class="line">                              size: &lt;number&gt;,</span><br><span class="line">                              max: &lt;number&gt;,</span><br><span class="line">                              storageEngine: &lt;document&gt;,</span><br><span class="line">                              validator: &lt;document&gt;,</span><br><span class="line">                              validationLevel: &lt;string&gt;,</span><br><span class="line">                              validationAction: &lt;string&gt;,</span><br><span class="line">                              indexOptionDefaults: &lt;document&gt;,</span><br><span class="line">                              viewOn: &lt;string&gt;,</span><br><span class="line">                              pipeline: &lt;pipeline&gt;,</span><br><span class="line">                              collation: &lt;document&gt;,</span><br><span class="line">                              writeConcern: &lt;document&gt;&#125; )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>字符串</td><td>要创建的集合的名称。</td></tr><tr><td>options</td><td>文档</td><td>可选。一大堆选项，暂时没用到，将来再补充了。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MongoDB如何创建数据集合（collection）。&lt;br&gt;
    
    </summary>
    
      <category term="MongoDB" scheme="http://www.oxysun.cn/categories/MongoDB/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux tail命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-tail.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-tail.html</id>
    <published>2018-06-26T03:31:58.000Z</published>
    <updated>2018-06-28T15:01:13.210Z</updated>
    
    <content type="html"><![CDATA[<p>tail命令用于显示来自文件或者管道结尾（最新实时）的内容。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>tail命令用于显示来自文件或者管道结尾（最新实时）的内容。默认情况下，tail命令显示文件的最后10行内容。支持多文件处理，在输出每个文件之前都有一个标识文件名的标题。如果未指定文件，或者文件被指定为破折号「-」，则tail命令从标准输入中读取。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>tail [选项] [文件(s)]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>–retry：即是在tail命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项“——follow=name”连用；</li><li>-c<n>或——bytes=<n>：输出文件尾部的N（N为整数）个字节内容；</n></n></li><li>-f&lt;name/descriptor&gt;或；–follow<nameldescript>：显示文件最新追加的内容。“name”表示以文件名的方式监视文件的变化。“-f”与“-fdescriptor”等效；</nameldescript></li><li>-F：与选项“-follow=name”和“–retry”连用时功能相同；</li><li>-n<n>或——line=<n>：输出文件的尾部N（N位数字）行内容。</n></n></li><li>–pid=&lt;进程号&gt;：与“-f”选项连用，当指定的进程号的进程终止后，自动退出tail命令；</li><li>-q或——quiet或——silent：当有多个文件参数时，不输出各个文件名；</li><li>-s&lt;秒数&gt;或——sleep-interal=&lt;秒数&gt;：与“-f”选项连用，指定监视文件变化时间隔的秒数；</li><li>-v或——verbose：当有多个文件参数时，总是输出各个文件名；</li><li>–help：显示指令的帮助信息；</li><li>–version：显示指令的版本信息。tail -f  /usr/local/webserver/tomcat/logs/catalina.out</li></ul><h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><p><strong>实例：1. 查看文件的后十行</strong><br>描述：查看words文件的后10行。默认情况下，tail命令显示文件的最后10行内容。<br>命令：<code>tail letter</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail.png" alt=""></p><p><strong>实例：2. 限制要显示的行数</strong><br>描述：显示words文件的最后3行。-n选项限制要显示的行数。<br>命令：<br><code>tail -n 3 letter</code><br><code>tail -3 letter</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-n.png" alt=""></p><p>描述：显示words文件的最后1000行。可以在num后加上后缀，例如：b，KB，K等等。<br>命令：<code>tail -n 1K /usr/share/dict/words</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-n-1K.png" alt=""></p><p><strong>实例：3. 监视日志文件</strong><br>描述：显示words文件（日志文件）的最后10行，并且一直监视它，一旦有新的内容加入，就立即打印出来。-f选项将监视文件的更新。<br>命令：<code>tail -f /usr/share/dict/words</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-f-CTRL-C.png" alt=""><br>注意：tail -f将一直监视着文件，要停止它，按CTRL+C。</p><p><strong>实例：4. 监视日志文件并只输出指定内容</strong><br>描述：tail将监视access.log文件，它将通过管道传送access.log的最后十行和任何新加入到文件中的行给grep。grep读取从tail传送过来的输出，只打印出包含IP地址10.10.10.10的那些行。<br>命令：<code>tail -f access.log | grep 10.10.10.10</code></p><p><strong>实例：5. 监视日志文件并指定刷新间隔</strong><br>描述：tail将监视access.log文件，其监视的时间间隔为5秒。<br>命令：<code>tail -f -s 5 access.log</code></p><p><strong>实例：6. tail -f的代替命令</strong><br>描述：与tail -f效果相同的命令是less。使用下面命令打开文件后，按下shift+f，就与tail -f的效果相同了。<br>命令：<br><code>less /usr/share/dict/words</code><br>press<code>SHIFT+F</code><br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-less.png" alt=""></p><p><strong>实例：7. 限制要显示的字节数</strong><br>描述：显示words文件的最后32个字节。-c选项限制显示的字节数。<br>命令：<code>tail -c 32 /usr/share/dict/words</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-c.png" alt=""></p><p><strong>实例：8. 显示多个文件</strong><br>描述：显示多个文件的前十行，同时标题会显示哪个文件正在显示。<br>命令：<code>tail /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-multi-file.png" alt=""></p><p><strong>实例：9. 多个文件不显示标题</strong><br>描述：显示多个文件的前3行，不显示正在显示文件的标题。<br>命令：<code>tail -n 3 -q /usr/share/dict/words /usr/share/dict/propernames</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-q.png" alt=""></p><p><strong>实例：10. 与管道配合使用</strong><br>描述：显示/etc/目录下的最近修改的前5个文件或文件夹。tail命令可以接受其他命令通过管道传送过来的信息。<br>命令：<code>cat letter | tail -n 5</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/tail/tail-pipe.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tail命令用于显示来自文件或者管道结尾（最新实时）的内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux uniq命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-uniq.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-uniq.html</id>
    <published>2018-06-24T00:53:22.000Z</published>
    <updated>2018-06-28T15:01:13.213Z</updated>
    
    <content type="html"><![CDATA[<p>uniq命令用于报告或忽略文件中的重复行。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>uniq命令可以轻松地从文件中找到重复的行，而且可以删除重复项，显示重复项出现的次数，只显示重复的行，只显示唯一的行。<br>请注意，除非重复行是相邻的，否则uniq不会删除它们。因此可能需要先对它们进行排序，或将排序命令与uniq组合使用。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>uniq [选项] [文件]</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-c或——count：在每列旁边显示该行重复出现的次数；</li><li>-d或–repeated：仅显示重复出现的行列；</li><li>-f&lt;栏位&gt;或–skip-fields=&lt;栏位&gt;：忽略比较指定的栏位；</li><li>-s&lt;字符位置&gt;或–skip-chars=&lt;字符位置&gt;：忽略比较指定的字符；</li><li>-u或——unique：仅显示出一次的行列；</li><li>-w&lt;字符位置&gt;或–check-chars=&lt;字符位置&gt;：指定要比较的字符。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><h3 id="实例：删除相邻重复的行"><a href="#实例：删除相邻重复的行" class="headerlink" title="实例：删除相邻重复的行"></a><strong>实例：删除相邻重复的行</strong></h3><p>描述：uniq命令删除了给定文件中所有连续重复的行，剩下显示的行都不重复。可以看到输出中，第1行和第3行重复了，第2行和第5行重复了。这是因为uniq命令只有在相邻的情况下才会删除重复的行。<br>命令：<code>uniq device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq.png" alt=""></p><h3 id="实例：删除所有重复的行"><a href="#实例：删除所有重复的行" class="headerlink" title="实例：删除所有重复的行"></a><strong>实例：删除所有重复的行</strong></h3><p>描述：经过排序之后，所有相同的行都连续地排在一起，达到了删除所有行的目的。<br>命令：<br><code>sort -u device</code><br><code>sort device | uniq</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-sort.png" alt=""></p><h3 id="实例：仅显示不连续重复的单一行"><a href="#实例：仅显示不连续重复的单一行" class="headerlink" title="实例：仅显示不连续重复的单一行"></a><strong>实例：仅显示不连续重复的单一行</strong></h3><p>描述：只显示device中不连续重复的单一行，只有10:aaa:43是唯一的。<br>命令：<code>uniq -u device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-u.png" alt=""></p><h3 id="实例：找出重复的行"><a href="#实例：找出重复的行" class="headerlink" title="实例：找出重复的行"></a><strong>实例：找出重复的行</strong></h3><p>显示device文件中连续出现的重复行。同样，不连续重复的行被认为是不重复的行。<br>描述：33:fff:221出现了两次，因为它们不是连续的。<br>命令：<code>uniq -d device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-d.png" alt=""></p><p>描述：在device文件中的第一行插入一行11:eee:49，但输出中没有出现，因为它们不是连续的。<br>命令：<br><code>vim device &lt;修改文件&gt;</code><br><code>uniq -d device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-d5.png" alt=""></p><p>描述：先排序，然后真正找出重复的行。<br>命令：<code>sort device | uniq -d</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-d3.png" alt=""></p><p>描述：先排序，然后将所有重复的行全部显示出来。<br>命令：<code>sort device | uniq -D</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-d4.png" alt=""></p><h3 id="实例：统计各行在出现的次数"><a href="#实例：统计各行在出现的次数" class="headerlink" title="实例：统计各行在出现的次数"></a><strong>实例：统计各行在出现的次数</strong></h3><p>描述：-c选项统计device文件中各行重复的次数。<br>命令：<code>uniq -c device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-c.png" alt=""></p><p>描述：下面的例子，检查给定文件中每一行重复出现的行数。<br>命令：<code>sort device | uniq -c | sort -nr</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-c-sort.png" alt=""></p><h3 id="实例：将比较限制为N个字符"><a href="#实例：将比较限制为N个字符" class="headerlink" title="实例：将比较限制为N个字符"></a><strong>实例：将比较限制为N个字符</strong></h3><p>描述：只比较每行的第一个字符。输出中可以看到，前两行被当做相同的行。-d选项将比较限制为N个字符。<br>命令：<code>uniq -d -w 1 device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-w.png" alt=""></p><h3 id="实例：忽略N个字符后比较"><a href="#实例：忽略N个字符后比较" class="headerlink" title="实例：忽略N个字符后比较"></a><strong>实例：忽略N个字符后比较</strong></h3><p>描述：下面的命令将忽略在文件中每行的前七个字符后，再进行比较。-s选项来忽略比较前N个字符。<br>命令：<code>uniq -d -s 7 device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-s.png" alt=""></p><h3 id="实例：忽略N个字段后比较"><a href="#实例：忽略N个字段后比较" class="headerlink" title="实例：忽略N个字段后比较"></a><strong>实例：忽略N个字段后比较</strong></h3><p>描述：先将device文件的内容排序后，用awk格式化输出。-t和-F指定sort和awk的域分隔符。<br>命令：<code>sort -t: device | awk -F: &#39;{print $1&quot; &quot;$2&quot; &quot;$3}&#39;</code></p><p>描述：忽略两个字段后进行比较。从输出中看到，第三个字段只有49和221是重复的。-f选项指定忽略N个字段后，再进行比较。<br>命令：<code>sort -t: device | awk -F: &#39;{print $1&quot; &quot;$2&quot; &quot;$3}&#39; | uniq -d -f 2</code></p><p>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/uniq/uniq-f.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;uniq命令用于报告或忽略文件中的重复行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux kill命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-kill.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-kill.html</id>
    <published>2018-06-22T23:33:18.000Z</published>
    <updated>2018-06-28T15:01:13.203Z</updated>
    
    <content type="html"><![CDATA[<p>kill命令用来删除执行中的程序或工作。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或job指令查看。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/kill/kill-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>kill [signal or option] PID(s)</code></p><p>表: kill命令的信号名</p><table><thead><tr><th style="text-align:left">信号</th><th style="text-align:left">信号值</th><th style="text-align:left">行为</th></tr></thead><tbody><tr><td style="text-align:left">SIGHUP</td><td style="text-align:left">1</td><td style="text-align:left">挂起</td></tr><tr><td style="text-align:left">SIGKILL</td><td style="text-align:left">9</td><td style="text-align:left">杀死信号</td></tr><tr><td style="text-align:left">SIGTERM</td><td style="text-align:left">15</td><td style="text-align:left">终止</td></tr></tbody></table><p>SIGTERM是杀死进程默认和最安全的方式，SIGHUP次之。SIGKILL是最不安全的方式，它将杀死一个没有完全保存的进程。</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-a：当处理当前进程时，不限制命令名和进程号的对应关系。</li><li>-l &lt;信号编号&gt;：若不加&lt;信号编号&gt;选项，则-l参数会列出全部的信号名称。</li><li>-p：指定kill 命令只打印相关进程的进程号，而不发送任何信号。</li><li>-s &lt;信号名称或编号&gt;：指定要送出的信息。</li><li>-i：交互式的终止进程。</li><li>-I：忽略大小写。</li><li>-u：指定用户。</li></ul><h2 id="kill的执行范围"><a href="#kill的执行范围" class="headerlink" title="kill的执行范围"></a>kill的执行范围</h2><ul><li>用户可以杀死他的所有进程。</li><li>用户不能杀死另一个用户的进程。</li><li>用户无法终止系统正在使用的进程。</li><li>root用户可以终止系统级进程和任何用户的进程。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a><strong>杀死进程</strong></h3><p>描述：用pgrep找出进程PID，并用kill终止PID为2807的进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># pgrep mysql</span><br><span class="line">2807</span><br><span class="line"># kill -9 2807</span><br></pre></td></tr></table></figure><p>说明：使用<code>kill -9 PID</code>与<code>kill -SIGKILL PID</code>类似。</p><h3 id="使用进程名称杀死进程"><a href="#使用进程名称杀死进程" class="headerlink" title="使用进程名称杀死进程"></a><strong>使用进程名称杀死进程</strong></h3><p>描述：pkill命令后直接加上进程名即可杀死该进程，但在杀死之前，最好先确认进程名称是否正确。<br>命令：<br><code>pkill mysql</code></p><p>描述：为了避免kill掉错误的进程，也可以通过下面命令来匹配进程名称。<br>命令：<br><code>pgrep -l ssh</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/ps/ps-pgrep-l.png" alt=""></p><h3 id="killall杀死多个进程"><a href="#killall杀死多个进程" class="headerlink" title="killall杀死多个进程"></a><strong>killall杀死多个进程</strong></h3><p>描述：一次杀死多个进程。<br>命令：<br><code>kill PID1 PID2 PID3</code><br><code>kill -9 PID1 PID2 PID3</code><br><code>kill -SIGKILL PID1 PID2 PID3</code></p><p>描述：killall用进程名替代PID，并且会kill掉所有的同名进程。<br>语法：<code>killall [signal or option] Process name</code><br>命令：<code>killall mysqld</code><br>检查：验证进程是否处于运行状态。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> service mysql status</span><br><span class="line"><span class="meta">#</span> pgrep mysql</span><br><span class="line"><span class="meta">#</span> ps -aux | grep mysql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kill命令用来删除执行中的程序或工作。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux mkdir命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-mkdir.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-mkdir.html</id>
    <published>2018-06-22T09:33:12.000Z</published>
    <updated>2018-06-28T15:01:13.204Z</updated>
    
    <content type="html"><![CDATA[<p>mkdir命令用来创建目录和子目录。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>mkdir命令用来创建目录和子目录，如果目录还不存在，则创建之。<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>mkdir [OPTION]... DIRECTORY...</code></p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">m&lt;目标属性&gt;或–mode&lt;目标属性&gt;</td><td style="text-align:left">建立目录的同时设置目录的权限</td></tr><tr><td style="text-align:left">p或–parents</td><td style="text-align:left">若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录</td></tr><tr><td style="text-align:left">v</td><td style="text-align:left">列出已经被创建的目录</td></tr></tbody></table><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="运行mkdir命令"><a href="#运行mkdir命令" class="headerlink" title="运行mkdir命令"></a><strong>运行mkdir命令</strong></h3><p>描述：在~下创建mk目录，如果目录已存在，会提示无法创建它。<br>命令：<code>mkdir mk</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir.png" alt=""></p><p>描述：创建目录的首要条件是，在创建目录的目标路径下你必须具有访问权限。<br>命令：<code>mkdir mk</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-permission.png" alt=""></p><h3 id="创建多个目录"><a href="#创建多个目录" class="headerlink" title="创建多个目录"></a><strong>创建多个目录</strong></h3><p>描述：同时创建foo、bar、baz三个目录。<br>命令：<code>mkdir foo bar baz</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-multiple-file.png" alt=""></p><h3 id="递归创建目录"><a href="#递归创建目录" class="headerlink" title="递归创建目录"></a><strong>递归创建目录</strong></h3><p>描述：创建具有子目录层级的目录，如果父目录找不到，使用-p选项可以递归创建目录，包括父目录。<br>命令：<br><code>mkdir -p word/more</code><br><code>ls -R</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-R.png" alt=""></p><h3 id="设置访问权限"><a href="#设置访问权限" class="headerlink" title="设置访问权限"></a><strong>设置访问权限</strong></h3><p>描述：创建一个名为foo的目录，同时为目录所有者、用户组和其他用户针对该目录赋予只读权限。-m选项可以设置新目录的权限。<br>命令：<code>mkdir -m=r-- foo</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-m.png" alt=""></p><h3 id="打印创建目录的过程信息"><a href="#打印创建目录的过程信息" class="headerlink" title="打印创建目录的过程信息"></a><strong>打印创建目录的过程信息</strong></h3><p>描述：-v选项可以查看创建目录的过程。<br>命令：<code>mkdir -v foo bar baz</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-v.png" alt=""></p><h3 id="创建复杂的目录树"><a href="#创建复杂的目录树" class="headerlink" title="创建复杂的目录树"></a><strong>创建复杂的目录树</strong></h3><p>描述：实现下面的目录树结构，用{}来创建层级目录，只要一行命令来实现。然后使用apt或yum安装tree软件包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># cd /home/#USER/Desktop</span><br><span class="line"># mkdir tecmint</span><br><span class="line"># mkdir tecmint/etc</span><br><span class="line"># mkdir tecmint/lib</span><br><span class="line"># mkdir tecmint/usr</span><br><span class="line"># mkdir tecmint/bin</span><br><span class="line"># mkdir tecmint/tmp</span><br><span class="line"># mkdir tecmint/opt</span><br><span class="line"># mkdir tecmint/var</span><br><span class="line"># mkdir tecmint/etc/x1</span><br><span class="line"># mkdir tecmint/usr/x2</span><br><span class="line"># mkdir tecmint/usr/x3</span><br><span class="line"># mkdir tecmint/tmp/Y1</span><br><span class="line"># mkdir tecmint/tmp/Y2</span><br><span class="line"># mkdir tecmint/tmp/Y3</span><br><span class="line"># mkdir tecmint/tmp/Y3/z</span><br></pre></td></tr></table></figure><p>命令：<code>mkdir -p /home/$USER/iweeek/{etc/x1,lib,usr/{x2,x3},bin,tmp/{Y1,Y2,Y3/z},opt,var}</code><br><code>tree /home/$USER/iweeek</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/mkdir/mkdir-tree.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mkdir命令用来创建目录和子目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux stat命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-stat.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-stat.html</id>
    <published>2018-06-20T17:14:22.000Z</published>
    <updated>2018-06-28T15:01:13.209Z</updated>
    
    <content type="html"><![CDATA[<p>stat命令用来显示文件或文件系统的状态。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>stat命令用来显示文件或文件系统的状态。stat命令从文件的索引节点获取信息，它们包括文件类型的信息，八进制访问权限和人类可读形式的权限，SELinux安全上下文字符串，文件创建时间，上次访问时间，上次数据修改时间，上次状态改变时间以及Epoch以来的秒数等等。因此，stat命令的输出信息比ls命令的输出信息要更详细。见touch命令。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>stat [OPTION]… FILE…</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-c或–format：使用特定或自定义格式而不是默认格式，在每一行结束之后打印一个新行。</li><li>-L：支持符号连接。</li><li>-f：显示文件系统状态而非文件状态。</li><li>–printf：类似于format，但它能够解释反斜线转义，并关闭后续换行符的打印，可以手动添加\n打印新行。</li><li>-t：以简洁方式输出信息。</li><li>–help：显示指令的帮助信息。</li><li>–version：显示指令的版本信息。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="stat显示更多信息"><a href="#stat显示更多信息" class="headerlink" title="stat显示更多信息"></a><strong>stat显示更多信息</strong></h3><p>描述：使用ls命令的长列表模式和使用stat命令查看文件信息。<br>命令：<br><code>ls -l names.txt</code><br><code>stat names.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-ls.png" alt=""><br>说明：图中，文件状态改变和文件修改的日期/时间是相同的，而访问时间是更近的时间。文件使用了8个块，以两个格式显示文件权限，八进制（0664）和-rw-rw-r–格式。在第三行显示索引为393342，文件没有其他硬链接（Links:1）。这个文件是一个常规文件。</p><h3 id="显示文件系统的状态"><a href="#显示文件系统的状态" class="headerlink" title="显示文件系统的状态"></a><strong>显示文件系统的状态</strong></h3><p>描述：f选项将显示指定文件系统的信息。需要提供一个目录/文件系统作为参数。<br>命令：<br><code>stat -f /dev/vda1</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-file-system.png" alt=""></p><h3 id="重命名改变状态时间"><a href="#重命名改变状态时间" class="headerlink" title="重命名改变状态时间"></a><strong>重命名改变状态时间</strong></h3><p>描述：重命名文件将会改变状态时间，即ctime。文件创建的时候ctime存储文件的创建日期和时间，修改文件后就变为记录文件的状态改动时间。<br>命令：<br><code>mv fairy fairy2</code><br><code>stat fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-mv.png" alt=""></p><h3 id="查看多个文件"><a href="#查看多个文件" class="headerlink" title="查看多个文件"></a><strong>查看多个文件</strong></h3><p>描述：使用通配符查看多个文件的状态。<br>命令：<code>stat t*</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-wild.png" alt=""></p><h3 id="用ls获取额外的信息"><a href="#用ls获取额外的信息" class="headerlink" title="用ls获取额外的信息"></a><strong>用ls获取额外的信息</strong></h3><p>描述：ls的u选项显示最后访问时间，c选项显示状态改动时间。<br>命令：<br><code>ls -lu fairy2</code><br><code>ls -lc fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-ls-u-c.png" alt=""></p><h3 id="用ls获取额外的信息-1"><a href="#用ls获取额外的信息-1" class="headerlink" title="用ls获取额外的信息"></a><strong>用ls获取额外的信息</strong></h3><p>描述：ls的u选项显示最后访问时间，c选项显示状态改动时间。<br>命令：<br><code>ls -lu fairy2</code><br><code>ls -lc fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-ls-u-c.png" alt=""></p><h3 id="显示指定的信息"><a href="#显示指定的信息" class="headerlink" title="显示指定的信息"></a><strong>显示指定的信息</strong></h3><p>--format选项可以单独显示具体的信息。可用的选项如下：</p><p>表: 文件的格式序列</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">%a</td><td style="text-align:left">八进制表示的访问权限</td></tr><tr><td style="text-align:left">%A</td><td style="text-align:left">可读格式表示的访问权限</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">分配的块数（参见%B）</td></tr><tr><td style="text-align:left">%B</td><td style="text-align:left">%b参数显示的每个块的字节数</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">十进制表示的设备号</td></tr><tr><td style="text-align:left">%D</td><td style="text-align:left">十六进制表示的设备号</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">十六进制表示的Raw模式</td></tr><tr><td style="text-align:left">%F</td><td style="text-align:left">文件类型</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">属主的组ID</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">属主的组名</td></tr><tr><td style="text-align:left">%h</td><td style="text-align:left">硬连接数</td></tr><tr><td style="text-align:left">%i</td><td style="text-align:left">Inode号</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">文件名</td></tr><tr><td style="text-align:left">%N</td><td style="text-align:left">如果是符号链接，显示器所链接的文件名</td></tr><tr><td style="text-align:left">%o</td><td style="text-align:left">I/O块大小</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">全部占用的字节大小</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">十六进制的主设备号</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">十六进制的副设备号</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">属主的用户ID</td></tr><tr><td style="text-align:left">%U</td><td style="text-align:left">属主的用户名</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">最后访问时间</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">最后访问时间，自Epoch开始的秒数</td></tr><tr><td style="text-align:left">%y</td><td style="text-align:left">最后修改时间</td></tr><tr><td style="text-align:left">%Y</td><td style="text-align:left">最后修改时间，自Epoch开始的秒数</td></tr><tr><td style="text-align:left">%z</td><td style="text-align:left">最后改变时间</td></tr><tr><td style="text-align:left">%Z</td><td style="text-align:left">最后改变时间，自Epoch开始的秒数</td></tr></tbody></table><p>表: 文件系统的格式序列</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">%a</td><td style="text-align:left">普通用户可用的块数</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">文件系统的全部数据块数</td></tr><tr><td style="text-align:left">%c</td><td style="text-align:left">文件系统的全部文件节点数</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">文件系统的可用文件节点数</td></tr><tr><td style="text-align:left">%f</td><td style="text-align:left">文件系统的可用节点数</td></tr><tr><td style="text-align:left">%C</td><td style="text-align:left">SELinux的安全上下文</td></tr><tr><td style="text-align:left">%i</td><td style="text-align:left">十六进制表示的文件系统ID</td></tr><tr><td style="text-align:left">%l</td><td style="text-align:left">文件名的最大长度</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">文件系统的文件名</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">块大小（用于更快的传输）</td></tr><tr><td style="text-align:left">%S</td><td style="text-align:left">基本块大小（用于块计数）</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">十六进制表示的文件系统类型</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">可读格式表示的文件系统类型</td></tr></tbody></table><p>描述：–format选项可以一次显示所有指定的信息。例如只查看文件类型，和硬链接数。<br>命令：<br><code>stat --format=%F %h fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-F-h.png" alt=""></p><p>描述：以两种格式查看权限，查看文件的最后访问时间，自Epoch开始的秒数，还查看了文件的属主。–format或-c选项可以打印特定或自定义格式，在每一行结束之后打印一个新行。<br>命令：<br><code>stat --format=%a fairy2</code><br><code>stat --format=%A fairy2</code><br><code>stat --format=%X fairy2</code><br><code>stat --format=%U fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-format.png" alt=""></p><p>描述：以两种格式查看权限，查看文件的最后访问时间，自Epoch开始的秒数，还查看了文件的属主。–printf类似于format，但它能够解释反斜线转义，并关闭后续换行符的打印，可以手动添加\n打印新行。<br>命令：<br><code>stat --printf=&quot;%a\n&quot; fairy2</code><br><code>stat --printf=&quot;%A\n&quot; fairy2</code><br><code>stat --printf=&quot;%X\n&quot; fairy2</code><br><code>stat --printf=&quot;%U\n&quot; fairy2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/stat/stat-printf.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;stat命令用来显示文件或文件系统的状态。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Liunx wc命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-wc.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-wc.html</id>
    <published>2018-06-19T16:43:34.000Z</published>
    <updated>2018-06-28T15:01:13.213Z</updated>
    
    <content type="html"><![CDATA[<p>wc命令可以计算文件的新行、字符数、字节数。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>wc命令可以计算文件的新行、字符数、字节数。如果指定多于一个文件，也列出总的行数。单词是由空格分隔的非零长度的字符序列。如果没有指定文件，或当文件为-，则读取标准输入。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>wc [OPTION]… [FILE]…<br>wc [OPTION]… –files0-from=F</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-c或–bytes或——chars：只显示Bytes数；</li><li>-l或——lines：只显示列数；</li><li>-w或——words：只显示字数。</li><li>-m或——chars：只显示字符数。</li><li>-L或–max-line-length：打印最长行的长度。</li><li>–files0-from=F：从文件读取文件名，文件名应该是NUL-terminated空字符结尾。如果是-则从标准输入中读取。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="打印字节数"><a href="#打印字节数" class="headerlink" title="打印字节数"></a><strong>打印字节数</strong></h3><p>描述：打印letter文件的行数，字符数，字节数和文件名。默认没有参数。<br>命令：<code>wc letter</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc.png" alt=""></p><h3 id="打印字节数-1"><a href="#打印字节数-1" class="headerlink" title="打印字节数"></a><strong>打印字节数</strong></h3><p>描述：打印file.txt文件的字节数，包含29个字节。-c选项打印字节数。<br>命令：<code>wc -c file.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-c.png" alt=""></p><h3 id="打印字符数"><a href="#打印字符数" class="headerlink" title="打印字符数"></a><strong>打印字符数</strong></h3><p>描述：打印file.txt文件的字符数，包含29个字符。-m选项打印字符数。<br>命令：<code>wc -m file.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-m.png" alt=""></p><h3 id="打印换行数"><a href="#打印换行数" class="headerlink" title="打印换行数"></a><strong>打印换行数</strong></h3><p>描述：打印file.txt文件中的新行数，包含4行。-l选项打印新行数。<br>命令：<code>wc -l file.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-l.png" alt=""></p><h3 id="打印单词数"><a href="#打印单词数" class="headerlink" title="打印单词数"></a><strong>打印单词数</strong></h3><p>描述：打印file.txt文件中的单词数，包含6个单子。-w选项打印单词数。<br>命令：<code>wc -w file.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-w.png" alt=""></p><h3 id="打印最长行长度"><a href="#打印最长行长度" class="headerlink" title="打印最长行长度"></a><strong>打印最长行长度</strong></h3><p>描述：打印file.txt文件中的最长行的长度，最长行长度为11。-L选项打印输入文件中最长行的长度。<br>命令：<code>wc -L file.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-width-L.png" alt=""></p><h3 id="统计目录中文件或目录的数量"><a href="#统计目录中文件或目录的数量" class="headerlink" title="统计目录中文件或目录的数量"></a><strong>统计目录中文件或目录的数量</strong></h3><p>描述：统计目录中文件夹和文件的数量。ls -1将每个文件夹或文件放在新行上，然后通过wc -l来计算换行数。<br>命令：<code>ls -1 | wc -l</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-pipe.png" alt=""></p><h3 id="更多命令信息"><a href="#更多命令信息" class="headerlink" title="更多命令信息"></a><strong>更多命令信息</strong></h3><p><img src="http://p9xqnn501.bkt.clouddn.com/wc/wc-more-detail.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;wc命令可以计算文件的新行、字符数、字节数。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux date命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-date.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-date.html</id>
    <published>2018-06-19T08:10:19.000Z</published>
    <updated>2018-06-28T15:01:13.198Z</updated>
    
    <content type="html"><![CDATA[<p>date命令用来显示或设置系统时间与日期。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>date命令用来显示或设置系统时间与日期。date命令可以打印不同格式的时间或日期，被用来根据时间和日期执行操作。<br>在类UNIX系统中，日期被存储为一个整数，其大小为自世界标准时间（UTC）1970年1月1日0时0分0秒起流逝的秒数。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/date/date-man.png" alt=""></p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>date [OPTION]... [+FORMAT]</code><br><code>date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]</code></p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><p>表1: 命令参数</p><table><thead><tr><th style="text-align:left">参 数</th><th style="text-align:left">描 述</th></tr></thead><tbody><tr><td style="text-align:left">-d</td><td style="text-align:left">显示字符串描述的时间</td></tr><tr><td style="text-align:left">-f</td><td style="text-align:left">显示DATEFILE文件中的每行时间</td></tr><tr><td style="text-align:left">-r</td><td style="text-align:left">显示文件的最后修改时间</td></tr><tr><td style="text-align:left">-R</td><td style="text-align:left">以RFC-2822兼容日期格式显示时间</td></tr><tr><td style="text-align:left">-rfc-2822</td><td style="text-align:left">以RFC-2822兼容日期格式显示时间</td></tr><tr><td style="text-align:left">-s</td><td style="text-align:left">根据字符串来设置日期与时间</td></tr><tr><td style="text-align:left">-u</td><td style="text-align:left">显示或设定为Coordinated Universal Time时间格式（UTC）</td></tr><tr><td style="text-align:left">–help</td><td style="text-align:left">显示date命令的帮助信息</td></tr><tr><td style="text-align:left">–version</td><td style="text-align:left">显示date命令的版本信息</td></tr></tbody></table><p>表2: Format参数格式</p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">%%</td><td style="text-align:left">显示字符%</td></tr><tr><td style="text-align:left">%a</td><td style="text-align:left">星期几的缩写(Sun..Sat)</td></tr><tr><td style="text-align:left">%A</td><td style="text-align:left">星期几的完整名称（Sunday…Saturday）</td></tr><tr><td style="text-align:left">%b</td><td style="text-align:left">月份的缩写(Jan..Dec)</td></tr><tr><td style="text-align:left">%B</td><td style="text-align:left">月份的完整名称(January..December)</td></tr><tr><td style="text-align:left">%c</td><td style="text-align:left">日期与时间。只输入date指令也会显示同样的结果</td></tr><tr><td style="text-align:left">%C</td><td style="text-align:left">世纪(年份除100后去整) [00-99]</td></tr><tr><td style="text-align:left">%d</td><td style="text-align:left">日期(以01-31来表示)。</td></tr><tr><td style="text-align:left">%D</td><td style="text-align:left">日期(含年月日)。</td></tr><tr><td style="text-align:left">%e</td><td style="text-align:left">一个月的第几天 ( 1..31)</td></tr><tr><td style="text-align:left">%F</td><td style="text-align:left">日期，同%Y-%m-%d</td></tr><tr><td style="text-align:left">%g</td><td style="text-align:left">年份(yy)</td></tr><tr><td style="text-align:left">%G</td><td style="text-align:left">年份(yyyy)</td></tr><tr><td style="text-align:left">%h</td><td style="text-align:left">同%b</td></tr><tr><td style="text-align:left">%H</td><td style="text-align:left">小时(00..23)</td></tr><tr><td style="text-align:left">%I</td><td style="text-align:left">小时(01..12)</td></tr><tr><td style="text-align:left">%j</td><td style="text-align:left">一年的第几天(001..366)</td></tr><tr><td style="text-align:left">%k</td><td style="text-align:left">小时( 0..23)</td></tr><tr><td style="text-align:left">%l</td><td style="text-align:left">小时( 1..12)</td></tr><tr><td style="text-align:left">%m</td><td style="text-align:left">月份(01..12)</td></tr><tr><td style="text-align:left">%M</td><td style="text-align:left">分钟(00..59)</td></tr><tr><td style="text-align:left">%n</td><td style="text-align:left">换行</td></tr><tr><td style="text-align:left">%N</td><td style="text-align:left">纳秒(000000000..999999999)</td></tr><tr><td style="text-align:left">%p</td><td style="text-align:left">AM or PM</td></tr><tr><td style="text-align:left">%P</td><td style="text-align:left">am or pm</td></tr><tr><td style="text-align:left">%r</td><td style="text-align:left">12小时制时间(hh:mm:ss [AP]M)</td></tr><tr><td style="text-align:left">%R</td><td style="text-align:left">24小时制时间(hh:mm)</td></tr><tr><td style="text-align:left">%s</td><td style="text-align:left">从00:00:00 1970-01-01 UTC开始的秒数</td></tr><tr><td style="text-align:left">%S</td><td style="text-align:left">秒(00..60)</td></tr><tr><td style="text-align:left">%t</td><td style="text-align:left">制表符</td></tr><tr><td style="text-align:left">%T</td><td style="text-align:left">24小时制时间(hh:mm:ss)</td></tr><tr><td style="text-align:left">%u</td><td style="text-align:left">一周的第几天(1..7); 1 表示星期一</td></tr><tr><td style="text-align:left">%U</td><td style="text-align:left">一年的第几周，周日为每周的第一天(00..53)</td></tr><tr><td style="text-align:left">%V</td><td style="text-align:left">一年的第几周，周一为每周的第一天 (01..53)</td></tr><tr><td style="text-align:left">%w</td><td style="text-align:left">一周的第几天 (0..6); 0 代表周日</td></tr><tr><td style="text-align:left">%W</td><td style="text-align:left">一年的第几周，周一为每周的第一天(00..53)</td></tr><tr><td style="text-align:left">%x</td><td style="text-align:left">日期(mm/dd/yy)</td></tr><tr><td style="text-align:left">%X</td><td style="text-align:left">时间(%H:%M:%S)</td></tr><tr><td style="text-align:left">%y</td><td style="text-align:left">年份(00..99)</td></tr><tr><td style="text-align:left">%Y</td><td style="text-align:left">年份 (1970…)</td></tr><tr><td style="text-align:left">%z</td><td style="text-align:left">RFC-2822 风格数字格式时区(-0500)</td></tr><tr><td style="text-align:left">%:z</td><td style="text-align:left">以 +hh:mm 的数字格式表示时区 （如： -04:00）</td></tr><tr><td style="text-align:left">%::z</td><td style="text-align:left">以 +hh:mm:ss 的数字格式表示时区 （如： -04:00:00）</td></tr><tr><td style="text-align:left">%:::z</td><td style="text-align:left">以数字格式表示时区， 其中 : 的个数由你需要的精度来决定 （例如， -04， +05:30）</td></tr><tr><td style="text-align:left">%Z</td><td style="text-align:left">时区(e.g., EDT), 无法确定时区则为空</td></tr></tbody></table><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="显示UTC时间"><a href="#显示UTC时间" class="headerlink" title="显示UTC时间"></a><strong>显示UTC时间</strong></h3><p>描述：显示当前时间。<br>命令：<br><code>date</code><br><code>date -d now</code><br>描述：显示当前UTC时间，UTC意思是世界上最主要的时钟和时间的标准。<br>命令：<code>date -u</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-u-r.png" alt=""></p><h3 id="查找3周后的日期"><a href="#查找3周后的日期" class="headerlink" title="查找3周后的日期"></a><strong>查找3周后的日期</strong></h3><p>命令：<code>date -d &quot;3 weeks&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-after-three-weeks.png" alt=""></p><h3 id="查找3周又4天后的日期"><a href="#查找3周又4天后的日期" class="headerlink" title="查找3周又4天后的日期"></a><strong>查找3周又4天后的日期</strong></h3><p>命令：<code>date -d &quot;3 weeks 4 days&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-after-three-weeks-four-days.png" alt=""></p><h3 id="获取下个月的日期"><a href="#获取下个月的日期" class="headerlink" title="获取下个月的日期"></a><strong>获取下个月的日期</strong></h3><p>命令：<code>date -d &quot;next month&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-after-one-month.png" alt=""></p><h3 id="获取上个星期天的日期"><a href="#获取上个星期天的日期" class="headerlink" title="获取上个星期天的日期"></a><strong>获取上个星期天的日期</strong></h3><p>命令：<code>date -d &quot;last sunday&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-last-sunday.png" alt=""></p><h3 id="自定义日期格式"><a href="#自定义日期格式" class="headerlink" title="自定义日期格式"></a><strong>自定义日期格式</strong></h3><p>描述：要自定义日期格式，使用加号+。<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;-1day&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+2day&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+3hour&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+30minute&quot;</span><br><span class="line">date +&quot;%Y-%m-%d %H:%M:%S&quot; -d &quot;+300second&quot;</span><br></pre></td></tr></table></figure></p><p>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-d.png" alt=""><br>说明：date命令会翻译所有的百分号（%）开头的格式和输出在引号(“”)内所有的内容。</p><h3 id="以yyyy-mm-dd的格式显示日期"><a href="#以yyyy-mm-dd的格式显示日期" class="headerlink" title="以yyyy-mm-dd的格式显示日期"></a><strong>以yyyy-mm-dd的格式显示日期</strong></h3><p>描述：%F的格式是yyyy-mm-dd，即%Y-%m-%d。<br>命令：<code>date +%F</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-F.png" alt=""></p><h3 id="只显示时间"><a href="#只显示时间" class="headerlink" title="只显示时间"></a><strong>只显示时间</strong></h3><p>描述：%T格式是 时:分:秒 的格式，即%H:%M:%S。<br>命令：<code>date +%T</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-T.png" alt=""></p><h3 id="显示今天是一年中的第几天"><a href="#显示今天是一年中的第几天" class="headerlink" title="显示今天是一年中的第几天"></a><strong>显示今天是一年中的第几天</strong></h3><p>命令：<code>date +%j</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-j.png" alt=""></p><h3 id="显示文件最后修改的时间"><a href="#显示文件最后修改的时间" class="headerlink" title="显示文件最后修改的时间"></a><strong>显示文件最后修改的时间</strong></h3><p>命令：<code>date -r date.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-r.png" alt=""></p><h3 id="显示文件中的时间"><a href="#显示文件中的时间" class="headerlink" title="显示文件中的时间"></a><strong>显示文件中的时间</strong></h3><p>描述：-f选项可以显示每行一个日期的文件。<br>命令：<code>date -f date.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-file.png" alt=""></p><h3 id="设置系统时间"><a href="#设置系统时间" class="headerlink" title="设置系统时间"></a><strong>设置系统时间</strong></h3><p>描述：使用-s或–set来设置系统日期和时间。注意，必须拥有root特权，否则会出错。<br>命令：<br><code>date -s &quot;2017-06-19 00:00:00&quot;</code><br><code>date --set=&quot;2017-06-19 00:00:00&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-s.png" alt=""><br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-cannot-set.png" alt=""></p><h3 id="打包时以时间命名"><a href="#打包时以时间命名" class="headerlink" title="打包时以时间命名"></a><strong>打包时以时间命名</strong></h3><p>描述：压缩目录/etc到当前目录，文件名为etc-2018-06-19.tar.gz。通过在`之间`或$()中内嵌命令。<br>命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># tar czvf etc-$(date +%F).tar.gz /etc</span><br><span class="line">或者</span><br><span class="line"># tar czvf etc-`date +%F`.tar.gz /etc</span><br></pre></td></tr></table></figure></p><h3 id="在脚本中使用date命令"><a href="#在脚本中使用date命令" class="headerlink" title="在脚本中使用date命令"></a><strong>在脚本中使用date命令</strong></h3><p>命令：<br><code>date +&quot;DATE: %A %b-%d-%Y TIME: %T WEEK NUMBER: %W&quot;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/date/date-script.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;date命令用来显示或设置系统时间与日期。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux cd命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-cd.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-cd.html</id>
    <published>2018-06-19T01:36:54.000Z</published>
    <updated>2018-06-28T15:01:13.197Z</updated>
    
    <content type="html"><![CDATA[<p>cd命令用来切换工作目录。</p><a id="more"></a><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>cd [选项] 目录</code></p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>cd命令（change directory）用来切换工作目录。其中目录可以表示为绝对路径或相对路径，若目录名称省略，则变换至使用者的home directory（登录时所在的目录）。使用者只能访问自己的目录或者其余指定目录。通常与pwd命令一同使用，pwd命令获取当前目录路径并打印出来。</p><p>表: 特殊目录</p><table><thead><tr><th style="text-align:left">特殊目录</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">.</td><td style="text-align:left">代表此层目录</td></tr><tr><td style="text-align:left">..</td><td style="text-align:left">代表上一层目录</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">代表前一个工作目录</td></tr><tr><td style="text-align:left">~</td><td style="text-align:left">代表“目前使用者身份”所在的主文件</td></tr><tr><td style="text-align:left">~account</td><td style="text-align:left">代表account这个使用者的主文件夹（account是个账号名称）</td></tr></tbody></table><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-p 如果要切换到的目标目录是一个符号连接，直接切换到符号连接指向的目标目录。</li><li>-L 如果要切换的目标目录是一个符号的连接，直接切换到字符连接名代表的目录，而非符号连接所指向的目标目录。</li><li>- 只有 - 一个选项时，当前工作目录将被切换到环境变量”OLDPWD”所表示的目录。</li></ul><h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><h3 id="切换到当前目录的上一级目录"><a href="#切换到当前目录的上一级目录" class="headerlink" title="切换到当前目录的上一级目录"></a><strong>切换到当前目录的上一级目录</strong></h3><p>命令：<code>cd ..</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-previous.png" alt=""></p><h3 id="切换到当前目录的上上两层目录"><a href="#切换到当前目录的上上两层目录" class="headerlink" title="切换到当前目录的上上两层目录"></a><strong>切换到当前目录的上上两层目录</strong></h3><p>命令：<code>cd ../..</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-previous-previous.png" alt=""></p><h3 id="切换到当前目录的上一级目录-1"><a href="#切换到当前目录的上一级目录-1" class="headerlink" title="切换到当前目录的上一级目录"></a><strong>切换到当前目录的上一级目录</strong></h3><p>命令：<code>cd ~</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-home.png" alt=""></p><h3 id="切换到根目录"><a href="#切换到根目录" class="headerlink" title="切换到根目录"></a><strong>切换到根目录</strong></h3><p>命令：<code>cd /</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-root.png" alt=""></p><h3 id="切换到某个目录"><a href="#切换到某个目录" class="headerlink" title="切换到某个目录"></a><strong>切换到某个目录</strong></h3><p>命令：<code>cd /etc/security</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-specific.png" alt=""></p><h3 id="返回进入当前目录前所在目录"><a href="#返回进入当前目录前所在目录" class="headerlink" title="返回进入当前目录前所在目录"></a><strong>返回进入当前目录前所在目录</strong></h3><p>命令：<code>cd /etc/security</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-just-now.png" alt=""></p><h3 id="把上个命令的参数用作cd命令的参数"><a href="#把上个命令的参数用作cd命令的参数" class="headerlink" title="把上个命令的参数用作cd命令的参数"></a><strong>把上个命令的参数用作cd命令的参数</strong></h3><p>命令：<code>cd !$</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-last-command.png" alt=""></p><h3 id="切换到名字带有空格的目录"><a href="#切换到名字带有空格的目录" class="headerlink" title="切换到名字带有空格的目录"></a><strong>切换到名字带有空格的目录</strong></h3><p>命令：<code>cd iweeek\ config/</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-space.png" alt=""></p><h3 id="切换到某个目录并且打印列表"><a href="#切换到某个目录并且打印列表" class="headerlink" title="切换到某个目录并且打印列表"></a><strong>切换到某个目录并且打印列表</strong></h3><p>命令：<code>cd /home/nijun/ &amp;&amp; ls;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-pipe.png" alt=""></p><h3 id="保存当前工作目录至内存"><a href="#保存当前工作目录至内存" class="headerlink" title="保存当前工作目录至内存"></a><strong>保存当前工作目录至内存</strong></h3><p>描述：保存当前目录到内存，然后切换到要求的目录。一旦popd被执行，它会从内存取出保存的目录位置，作为当前目录。<br>命令：<br><code>cd /home/nijun/sed</code><br><code>popd</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-pushd-popd.png" alt=""><br>说明：pushd和popd是Linux bash命令，也是其他几个能够保存当前工作目录位置至内存，并且从内存读取目录作为当前目录的脚本，这些脚本也可以切换目录。</p><h3 id="切换到某个字符串开头的目录"><a href="#切换到某个字符串开头的目录" class="headerlink" title="切换到某个字符串开头的目录"></a><strong>切换到某个字符串开头的目录</strong></h3><p>描述：如果目录中只有一个以s开头的目录，就会直接移动security目录中。如果有很多目录以s开头，而且命令行没有提供更多的标准，这将会移动到第一个以s开头的命令（以标准字典的顺序）。<br>命令：<br><code>cd /etc/s*</code><br><code>cd /etc/securi*</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-asterisk.png" alt=""></p><p>命令：<code>cd /etc/p?</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/cd/cd-question.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cd命令用来切换工作目录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.oxysun.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux join命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-join.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-join.html</id>
    <published>2018-06-18T08:59:13.000Z</published>
    <updated>2018-06-28T15:01:13.203Z</updated>
    
    <content type="html"><![CDATA[<p>join命令用来将两个分类文本文件的行连在一起，与SQL语言中的join命令相似。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>join命令根据两个分类文本文件的两个相同字段，将两个文件连接起来，结果写入标准输出。默认连接字段是由空格分隔的第一个字段。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>join [选项] 文件1 文件2</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-a&lt;1或2&gt;：除了显示原来的输出内容之外，还显示指令文件中没有匹配的行。</li><li>-e&lt;字符串&gt;：若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串。</li><li>-i或–ignore-case：比较栏位内容时，忽略大小写的差异。</li><li>-o&lt;格式&gt;：按照指定的格式来显示结果。</li><li>-t&lt;字符&gt;：使用栏位的分割字符。</li><li>-v&lt;1或2&gt;：更-a相同，但是只显示文件中没有匹配的行。</li><li>-1&lt;栏位&gt;：连接[文件1]指定的栏位。</li><li>-2&lt;栏位&gt;：连接[文件2]指定的栏位。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：1. 相同域连接</strong><br>描述：将foodtype.txt和foods.txt两个文件共享的第一个字段作为连接字段，将文件连接起来。<br>命令：<code>join foodtype.txt foods.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-two-file.png" alt=""></p><p><strong>实例：2. 不同域连接</strong><br>描述：将wine.txt的第二列和reviews.txt的第一列连接起来。也可以使用-j选项，即-j1 2 -j2 1。<br>命令：<code>join -1 2 -2 1 wine.txt reviews.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-1-2.png" alt=""></p><p><strong>实例：3. 先排序再连接</strong></p><p>描述：如果上述两个文件指定的文件未排序，那么在连接的时候会发生错误。<br>命令：<code>join -1 2 -2 1 wine.txt reviews.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-sort-file.png" alt=""></p><p>描述：先按wine.txt的第二列排好序，再按reviews的第一列排好序，最后将两个排好序的文件连接起来。<br>命令：<code>join -1 2 -2 1 &lt;(sort -k 2 wine.txt) &lt;(sort reviews.txt)</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-sort.png" alt=""></p><p><strong>实例：4. 指定字段分隔符</strong><br>描述：将names.csv和transactions.csv两个文件指定分隔符为，号进行连接，-t选项指定字段分隔符。<br>命令：<code>join -1 2 -2 3 -t , names.csv transactions.csv</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-t.png" alt=""></p><p><strong>实例：5. 指定显示的字段</strong><br>描述：-o选项指定连接的输出格式。<br>命令：<code>join -1 2 -2 3 -t , -o 1.1,1.2,1.3,2.2,2.1 names.csv transactions.csv</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-o.png" alt=""></p><p><strong>实例：6. 用默认字符串代替未匹配的字段</strong><br>描述：-e选项告诉join当找不到匹配项的时候应该用什么字符串来替换空位，-o选项告诉join哪些不匹配的字段应该被代替。-e只能与-o搭配使用。</p><ul><li>0,1.1,2.2：0表示匹配的关键字段。<ul><li>1.1：表示第一个文件中第一个字段。</li><li>2.2：表示第二个文件中第二个字段。</li></ul></li></ul><p>命令：<br><code>join -a 1 -a 2 -e &quot;NULL&quot; -o 1.1,1.2,2.2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-e.png" alt=""></p><p><strong>实例：7. 显示匹配和不匹配的行</strong><br>描述：既显示成功匹配的行，也显示两个文件中不匹配的所有行。-a选项可选值为1或2，分别表示前后两个文件，意思是显示指定文件中不匹配的行。<br>命令：<br><code>join -a 1 foods.txt foodtype.txt</code><br><code>join -a 2 foods.txt foodtype.txt</code><br><code>join -a 1 -a 2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-a.png" alt=""></p><p><strong>实例：8. 只显示不匹配的行</strong><br>描述：只两个文件中不匹配的所有行。-v选项可选值为1或2，分别表示前后两个文件，意思是只显示指定文件中不匹配的行，将忽略已匹配连接的行。<br>命令：<br><code>join -v 1 -v 2 foods.txt foodtype.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/join/join-v.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;join命令用来将两个分类文本文件的行连在一起，与SQL语言中的join命令相似。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux df命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-df.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-df.html</id>
    <published>2018-06-16T22:16:12.000Z</published>
    <updated>2018-06-28T15:01:13.199Z</updated>
    
    <content type="html"><![CDATA[<p>df命令用于显示文件系统磁盘空间使用情况。</p><a id="more"></a><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>df [选项] [文件]</p><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>df（disk filesystem 的简称）用于显示文件系统磁盘空间使用情况。默认显示单位为KB。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><ul><li>-a或–all：全部文件系统列表。</li><li>-h或–human-readable：方便阅读方式显示。</li><li>-H或–si：等于“-h”，但是计算式，1K=1000，而不是1K=1024。</li><li>-i或–inodes：显示inode信息。</li><li>-k或–kilobytes：区块为1024字节。</li><li>-l或–local：只显示本地文件系统。</li><li>-m或–megabytes：区块为1048576字节。</li><li>–no-sync：忽略sync命令。</li><li>-P或–portability：输出格式为POSIX。</li><li>–sync：在取得磁盘信息前，先执行sync命令。</li><li>-T或–print-type：文件系统类型。</li><li>–block-size=&lt;区块大小&gt;：指定区块大小。</li><li>-t&lt;文件系统类型&gt;或–type=&lt;文件系统类型&gt;：只显示选定文件系统的磁盘信息。</li><li>-x&lt;文件系统类型&gt;或–exclude-type=&lt;文件系统类型&gt;：不显示选定文件系统的磁盘信息。</li><li>–help：显示帮助信息。</li><li>–version：显示版本信息。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：1. 检查文件系统磁盘空间使用情况</strong><br>描述：显示设备名称、总块数、总磁盘空间、已用磁盘空间、可用磁盘空间和文件系统上的挂载点。<br>命令：df<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df.png" alt=""></p><p><strong>实例：2. 以人类可读的格式显示磁盘使用情况</strong><br>描述：以人类可读格式显示信息。<br>命令：df -h<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-h.png" alt=""></p><p><strong>实例：3. 检查所有文件系统磁盘使用空间信息</strong><br>描述：与上述相同，但它也显示虚拟文件系统的信息以及所有文件系统磁盘使用情况和内存使用情况。<br>命令：df -a<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-a.png" alt=""></p><p><strong>实例：4. 显示文件系统的类型</strong><br>描述：以人类可读格式（h）显示文件系统的类型（T）信息。<br>命令：df -hT<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-hT.png" alt=""></p><p><strong>实例：5. 检查特定分区的信息</strong><br>描述：-hT将以可读格式显示/root的信息。<br>命令：df -hT /root<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-hT-path.png" alt=""></p><p><strong>实例：6. 筛选指定的文件系统类型</strong><br>描述：筛选文件系统类型为ext4的磁盘使用情况。<br>命令：df -t ext4 -hT<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-t.png" alt=""></p><p><strong>实例：7. 排除指定的文件系统类型</strong><br>描述：排除文件系统类型为ext4的磁盘，显示剩下的磁盘类型使用情况。<br>命令：df -x ext4 -hT<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-x.png" alt=""></p><p><strong>实例：8. 显示文件系统的inodes信息</strong><br>描述：-i选项显示文件系统使用的inode数量及其百分比的信息。<br>命令：df -i<br>输出：</p><p><img src="http://p9xqnn501.bkt.clouddn.com/df/df-i.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;df命令用于显示文件系统磁盘空间使用情况。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux sort命令用法详解</title>
    <link href="http://www.oxysun.cn/linux/daily-command-sort.html"/>
    <id>http://www.oxysun.cn/linux/daily-command-sort.html</id>
    <published>2018-06-16T10:40:13.000Z</published>
    <updated>2018-06-28T15:01:13.209Z</updated>
    
    <content type="html"><![CDATA[<p>sort命令用于对单个或多个文本文件内容进行排序。</p><a id="more"></a><h2 id="命令功能"><a href="#命令功能" class="headerlink" title="命令功能"></a>命令功能</h2><p>sort命令将许多不同的域按不同的列顺序分类。sort命令以空格作为字段分隔符，将一行分割为多个关键字对文件进行排序。需要注意的是sort命令并不对文件内容进行实际的排序(即文件内容没有修改)，只是将文件内容按有序输出。</p><h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p><code>sort -cmu -o output_file [other_options] +pos1 +pos2 input_files</code></p><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li>-c：检查文件是否已经按照顺序排序。</li><li>-m：将几个排序号的文件进行合并。</li><li>-u：删除所有重复行。</li><li>-o&lt;输出文件&gt;：将排序后的结果存入指定的文件。</li><li>-b：忽略每行前面开始出的空格字符。</li><li>-h：人类可阅读的格式。</li><li>-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</li><li>-f：排序时，将小写字母视为大写字母。</li><li>-i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符。</li><li>-M：将前面3个字母依照月份的缩写进行排序。</li><li>-n：按照数值的大小排序。</li><li>-r：以相反的顺序来排序。</li><li>-t&lt;分隔字符&gt;：指定排序时所用的栏位分隔字符。</li><li>+&lt;起始栏位&gt;-&lt;结束栏位&gt;：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li></ul><h2 id="实用命令"><a href="#实用命令" class="headerlink" title="实用命令"></a>实用命令</h2><p><strong>实例：0. 测试文件</strong><br>描述：下面是device_sort的清单，包含了用户设备登录次数情况，各域为：（1）用户ID，（2）手机系统版本，（3）登录访问次数。域分隔符为冒号。域号从0开始，第1列用户ID为域0，即分类键0，以此类推。</p><p><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-origin-file.png" alt=""></p><p><strong>实例：1. 文件是否已分类</strong><br>描述：检查device文件的域用户ID是否已经有序。sort不加任何参数默认以域0（也就是第一列）进行排序，-c选项检查文件是否已按某种顺序排序。<br>命令：<code>sort -c device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-origin-file.png" alt=""></p><p><strong>实例：2. 使用分隔符</strong><br>描述：将device用:作为域分隔符分类，然后按第一列进行排序。实际上读文件时sort操作将行中各域进行比较，这里只返回基于第一域sort的结果。<br>命令：<code>sort -t : device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-t.png" alt=""></p><p><strong>实例：3. 排序求逆</strong><br>描述：反转实例2中的排序结果。这里先按照第一列进行排序，然后反转其结果。<br>命令：<code>sort -t: -r device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-r.png" alt=""></p><p><strong>实例：4.  使用选项k按指定列排序</strong><br>描述：使用选项k指定第1列进行排序。<br>命令：<code>sort -k1 -t: device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-k.png" alt=""></p><p><strong>实例：5. 数值域排序</strong></p><p>描述：使用n选项指明对数值内容进行排序，否则会按字符串从第一个字符开始进行比较。<br>命令：<code>sort -nk3 -t: device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-n.png" alt=""></p><p><strong>实例：6. 唯一性排序</strong></p><p>描述：使用u选项过滤所有重复的行，每个重复的行只显示一次。<br>命令：<code>sort -u -t: device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-u.png" alt=""></p><p><strong>实例：7. 两个文件进行排序、合并，并且删除重复行</strong></p><p>描述：两个文件进行排序、合并，并且删除重复行。<br>命令：<code>sort -u device device2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-u-merge.png" alt=""></p><p><strong>实例：8. pos用法</strong></p><p>格式：<code>F[.C][OPTS][,F[.C][OPTS]]</code><br>解释：指定排序域开始和结束的位置，F是字段的序号，C是字符的序号，两者初始都是1，结束位置可以不指定，默认是到行结束位置。如果-t和-b选项都没有指定，那么字段中的字符从前面的空白开始计数。OPTS由一个或多个单个字母排序的选项[bdfgiMhnRrV]，它们将重写全局排序选项，如果没有排序键被指定，sort就会以一整行作为键。-b选项去除每个键的前导空白。</p><p>假设有五列字段。<br>-k 2：表示从第二列开始到最后一列作为排序的关键字。<br>-k 2,5：表示从第二列开始到第五列作为排序的关键字。<br>-k 2,2：表示仅以第二列作为排序的关键字。<br>-k 4 -k 5：-k5是多余的。<br>-k 2,2 -k 1,1：先以第二列进行排序，再以第一列排序。<br>-k 2.2,2.5 -k 4.3,4.5：先以第二列的第二个字符开始到第五个字符进行排序，然后先以第四列的第三个字符开始到第五个字符进行排序。</p><p>格式：<code>sort +field_number .characters_in</code><br>描述：从第三列的第二个字符开始排序。<br>命令：<code>sort -k3.2 -t: device</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-pos.png" alt=""></p><p>描述：对/root目录执行ls -l的命令，其结果通过管道传递给sort进行排序，先以第二列排序，然后第五列，最后是第九列倒序。<br>命令：<code>ls -l /root | sort -k 2,2n -k 5,5n -r -k 9,9</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-k-pos.png" alt=""></p><p><strong>实例：9. head和tail与sort配合使用</strong></p><p>格式：<code>sort +field_number .characters_in</code><br>描述：以第三列的数值形式进行排序，从结果中抽取前3条和倒数3条记录。<br>命令：<br><code>sort -nk3 -t: device | head -3</code><br><code>sort -nk3 -t: device | tail -3</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-head-tail.png" alt=""></p><p><strong>实例：10. awk与sort配合使用</strong></p><p>描述：将sort结果用awk进行加一点附加信息。<br>命令：<code>sort -nk3 -t: device | tail -1 | awk -F: &#39;{print $1&quot;--&quot;$2&quot;--&quot;$3}&#39;</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-awk.png" alt=""></p><p><strong>实例：11. 两个输入文件进行sort，然后把它们连接成一行</strong><br>描述：创建两个文件，并用数据填充，然后对这两个文件排序并连接。<br>命令：<br><code>echo -e &quot;5 Reliable\n2 Fast\n3 Secure\n1 open-source\n4 customizable&quot; &gt; file1.txt</code><br><code>echo -e &quot;3 RedHat\n1 Debian\n5 Ubuntu\n2 Kali\n4 Fedora&quot; &gt; file2.txt</code><br><code>join &lt;(sort -n file1.txt) &lt;(sort file2.txt)1 open-source Debian</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-join.png" alt=""></p><p><strong>实例：12. 将两个分类文件合并</strong></p><p>描述：device_sorted和device_sorted2是两个已排好序的文件，文件合并前，它们必须以被分类。<br>命令：<code>sort -t: -m -k1 device_sorted device_sorted2</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-merge.png" alt=""></p><p><strong>实例：13. 按照月份顺序进行排序</strong></p><p>描述：M选项对month.txt文件按照月份顺序进行排序。sort命令需要至少3个字符来确认月份名称。<br>命令：<code>sort -M month.txt</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-M.png" alt=""></p><p><strong>实例：14. 把数据整理成方便人们阅读的形式</strong></p><p>描述：-h选项将把数据整理成方便人们阅读的形式，比如1K、2M、3G、2T，这里面的K、G、M、T代表千、兆、吉、梯。<br>命令：<code>ls -lh /root | sort -h -k5</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-h.png" alt=""></p><p><strong>实例：15. 随机化结果</strong><br>描述：-R选项将结果进行hash随机化排序。<br>命令：<code>ls -lh /root | sort -k5 -R</code><br>输出：<br><img src="http://p9xqnn501.bkt.clouddn.com/sort/sort-Random.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sort命令用于对单个或多个文本文件内容进行排序。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.oxysun.cn/tags/Linux/"/>
    
  </entry>
  
</feed>
